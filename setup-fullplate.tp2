BACKUP ~fullplate/backup~
AUTHOR ~erik, gibberlings3~
//MODDER setup_tra none
VERSION ~beta 3~
README ~fullplate/readme-fullplate.txt~
NO_IF_EVAL_BUG

ALLOW_MISSING ~baldur25.bcs~

BEGIN ~Full Plate And Packing Steel: Between You And Harm (alternate armour system)~
 DESIGNATED 1
 FORBID_COMPONENT ~SETUP-REFINEMENTS.TP2~ ~5~ ~Incompatible with Refinements' Revised Armors & Shields~
 FORBID_COMPONENT ~BG2_TWEAKS/SETUP-BG2_TWEAKS.TP2~ ~2100~ ~Incompatible with BG2 Tweaks' Allow Thieving and Stealth in Heavy Armor~
 FORBID_COMPONENT ~BG2_TWEAKS/SETUP-BG2_TWEAKS.TP2~ ~2110~ ~Incompatible with BG2 Tweaks' Allow Thieving and Stealth in Heavy Armor~
 FORBID_COMPONENT ~BG2_TWEAKS/SETUP-BG2_TWEAKS.TP2~ ~2120~ ~Incompatible with BG2 Tweaks' Allow Arcane Spellcasting in Heavy Armor~
 FORBID_COMPONENT ~BG2_TWEAKS/SETUP-BG2_TWEAKS.TP2~ ~2130~ ~Incompatible with BG2 Tweaks' Allow Arcane Spellcasting in Heavy Armor~
 FORBID_COMPONENT ~G3DALETWEAKS/SETUP-G3DALETWEAKS.TP2~ ~2040~ ~Incompatible with IWD Tweaks' Allow Thieving and Stealth in Heavy Armor~
 FORBID_COMPONENT ~G3DALETWEAKS/SETUP-G3DALETWEAKS.TP2~ ~2050~ ~Incompatible with IWD Tweaks' Allow Arcane Spellcasting in Heavy Armor~

ACTION_IF FILE_EXISTS ~override/tb#resisttweak.txt~ THEN BEGIN
    PRINT ~WARNING: tb#resisttweak.txt found in override. Not recommended, may cause stutter.~
END

PRINT ~Cleaning, shining, oiling:~
PRINT ~Naming and enchantment level fixes...~

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  PATCH_IF (SOURCE_SIZE < 0x72) BEGIN
    // PATCH_PRINT "%SOURCE_FILE%: Invalid, below minimum size"
  END ELSE BEGIN
    READ_BYTE  0x18 "flags"

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~ADLEATH.ITM~) BEGIN
      SAY NAME2 ~Angelo's Leathers +2~
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~ARMPEN.ITM~) BEGIN
      SAY NAME2 ~Studded Leather Armor of Penance +5~
      WRITE_BYTE 0x60 5
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BAND01.ITM~) BEGIN
      WRITE_LONG 0x54 0xffffffff // non-magical, doesn't need identified_desc
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BAND02.ITM~) BEGIN
      WRITE_LONG 0x34 2400 // too cheap for +1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BAND04.ITM~) BEGIN
      SAY NAME2 ~Eternal Age +2~
      WRITE_BYTE 0x60 2
      WRITE_LONG 0x34 7000 // same price as standard +2 banded, too cheap
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BELT02.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BELT03.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BELT04.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BLEAT01.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BLEAT02.ITM~) BEGIN
      WRITE_BYTE 0x18 ("%flags%" BAND 0b10111111)
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BLEAT03.ITM~) BEGIN
      WRITE_BYTE 0x18 ("%flags%" BAND 0b10111111)
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BLOOD.ITM~) BEGIN
      SAY NAME2 ~Bathed-In-Blood +4~
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~BRUENPLA.ITM~) BEGIN
      SAY NAME1 ~Field Plate Mail~
      SAY NAME2 ~Mithril Field Plate Mail +2~
      WRITE_BYTE 0x18 ("%flags%" BOR 0b01000000)
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~C2BELT01.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~C2CHAN01.ITM~) BEGIN
      SAY NAME2 ~Incarnadine Elven Chain +5~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~C2KELD01.ITM~) BEGIN
      SAY NAME1 ~Firecam Full Plate Mail~
      SAY NAME2 ~Firecam Full Plate Mail +3~
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~C2LEAT01.ITM~) BEGIN
      SAY NAME2 ~Human Flesh +8~
      WRITE_BYTE 0x60 8
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~C2PLAT01.ITM~) BEGIN
      SAY NAME1 ~Ankheg Plate Mail~
      SAY NAME2 ~Ankheg Plate Mail +4~
      WRITE_BYTE 0x18 ("%flags%" BOR 0b01000000)
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~C2ROBE01.ITM~) BEGIN
      WRITE_BYTE 0x60 7
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~C2ROBE02.ITM~) BEGIN
      WRITE_BYTE 0x60 7
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~C2ROBE03.ITM~) BEGIN
      WRITE_BYTE 0x60 7
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~C2VALY01.ITM~) BEGIN
      SAY NAME1 ~Corthala Family Armor~
      SAY NAME2 ~Corthala Family Armor +5~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHAINBM.ITM~) BEGIN
      SAY NAME2 ~Baleful Mail +2~
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHAN02.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHAN03.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHAN05.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHAN06.ITM~) BEGIN
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHAN07.ITM~) BEGIN
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHAN08.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHAN12.ITM~) BEGIN
      WRITE_BYTE 0x18 ("%flags%" BAND 0b10111111) // switch off magical flag
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHAN20.ITM~) BEGIN
      WRITE_BYTE 0x60 6
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHAN21.ITM~) BEGIN
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHANCM01.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHANGR01.ITM~) BEGIN
      READ_LONG NAME2 temp // move id strings to unid strings
      WRITE_LONG NAME1 %temp%
      READ_LONG 0x54 temp
      WRITE_LONG 0x50 %temp%
      WRITE_LONG 0x54 0xffffffff // non-magical, doesn't need identified_desc
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHANGR02.ITM~) BEGIN
      SAY NAME2 ~Zeddek's Skin +6~
      WRITE_BYTE 0x18 ("%flags%" BOR 0b01000000)
      WRITE_BYTE 0x60 6
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CHANGR03.ITM~) BEGIN
      SAY NAME2 ~Mithril Chain Mail +4~
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CISPGRD3.ITM~) BEGIN
      SAY NAME2 ~Shadowed Plate +3~
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CLCK15.ITM~) BEGIN
      WRITE_BYTE 0x60 5
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CLCK16.ITM~) BEGIN
      WRITE_BYTE 0x60 5
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CLCK17.ITM~) BEGIN
      WRITE_BYTE 0x60 5
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~CLOLTH.ITM~) BEGIN
      SAY NAME2 ~Dark Elven Chain +1~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~D0T#GORI.ITM~) BEGIN
      WRITE_BYTE 0x60 5
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~D0T#LEAT.ITM~) BEGIN
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~DLEAT10.ITM~) BEGIN
      WRITE_BYTE 0x18 ("%flags%" BOR 0b01000000) // switch on magical flag
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~DRAGARM.ITM~) BEGIN
      SAY NAME2 ~Black Dragon Scale +2~
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~DW#ABYDA.ITM~) BEGIN
      SAY NAME2 ~Yellow Dragon Armor +8~ // looks to be based on shadow dragon scale, which is +6 studded
      WRITE_BYTE 0x60 8
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~DW#LIZPL.ITM~) BEGIN
      WRITE_BYTE 0x18 ("%flags%" BOR 0b01000000) // switch on magical flag
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~DWCHAN01.ITM~) BEGIN
      SAY NAME2 ~Drow Adamantine Chain +3~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~DWPLAT01.ITM~) BEGIN
      SAY NAME2 ~Drow Adamantine Full Plate +5~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~ELFCHAN.ITM~) BEGIN
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~FINIROBE.ITM~) BEGIN
      WRITE_BYTE 0x60 5
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~FLAT01.ITM~) BEGIN
      WRITE_LONG 0x54 0xffffffff // non-magical, doesn't need identified_desc
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~FLAT02.ITM~) BEGIN
      WRITE_LONG 0x34 9000 // too cheap for +1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~FLAT04.ITM~) BEGIN
      SAY NAME2 ~Dwarven Field Plate +1~
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~FWCHAN01.ITM~) BEGIN
      SAY NAME2 ~Jester's Chain +4 (improved)~
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~FWLEAT03.ITM~) BEGIN
      SAY NAME2 ~Desert Troll Hide +9~
      WRITE_BYTE 0x60 9
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~GLORY.ITM~) BEGIN
      SAY NAME2 ~The Glory of Suffering +6~
      WRITE_BYTE 0x60 6
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~IPLAT05.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~ICEPLAT.ITM~) BEGIN
      SAY NAME2 ~Ice Plate +3~
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~J#SPLI06.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~KAYCHAI.ITM~) BEGIN
      SAY NAME2 ~Kaylessa's Elven Chain +3~
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEAT02.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEAT03.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEAT05.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEAT06.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEAT07.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEAT08.ITM~) BEGIN
      SAY NAME2 ~Shadow Armor +3~
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEAT09.ITM~) BEGIN
      SAY NAME2 ~Karajah's Life and Death +3~
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEAT11.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEAT15.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEAT19.ITM~) BEGIN
      SAY NAME2 ~Shadow Dragon Scale +6~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEATCM01.ITM~) BEGIN
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEATCM02.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEATGR01.ITM~) BEGIN
      READ_LONG NAME2 temp // move id strings to unid strings
      WRITE_LONG NAME1 %temp%
      READ_LONG 0x54 temp
      WRITE_LONG 0x50 %temp%
      WRITE_LONG 0x54 0xffffffff // non-magical, doesn't need identified_desc
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEATGR02.ITM~) BEGIN
      READ_LONG NAME2 temp // move id strings to unid strings
      WRITE_LONG NAME1 %temp%
      READ_LONG 0x54 temp
      WRITE_LONG 0x50 %temp%
      WRITE_BYTE 0x18 ("%flags%" BAND 0b10111111) // switch off magical flag
      WRITE_LONG 0x54 0xffffffff // non-magical, doesn't need identified_desc
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEATGR03.ITM~) BEGIN
      WRITE_BYTE 0x18 ("%flags%" BAND 0b10111111) // switch off magical flag
      WRITE_BYTE 0x60 0
      WRITE_LONG 0x54 0xffffffff // non-magical, doesn't need identified_desc
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEATGR04.ITM~) BEGIN
      SAY NAME2 ~Exotic Hide Armor +1~
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~LEATGR05.ITM~) BEGIN
      READ_LONG NAME2 temp // move id strings to unid strings
      WRITE_LONG NAME1 %temp%
      WRITE_BYTE 0x60 0
      WRITE_BYTE 0x18 ("%flags%" BAND 0b10111111) // switch off magical flag
      WRITE_LONG 0x54 0xffffffff // non-magical, doesn't need identified_desc
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~M#ASLEAT.ITM~) BEGIN
      SAY NAME2 ~Apprentice Shadow Armor +1~
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~MAILLIF.ITM~) BEGIN
      SAY NAME2 ~Mail of Life +3~
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~MGILEAT1.ITM~) BEGIN
      SAY NAME1 ~Leather Armor~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~MGIPLAT1.ITM~) BEGIN
      SAY NAME1 ~Full Plate Mail~
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~MOURNER.ITM~) BEGIN
      SAY NAME2 ~Mourner's Armor +4~
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~MWARARM.ITM~) BEGIN
      SAY NAME2 ~Ariena's Armor: Hide +3~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~NPARM.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~NPCHAN.ITM~) BEGIN
      SAY NAME1 ~Corthala Family Armor~
      SAY NAME2 ~Corthala Family Armor +3~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~NPPLAT.ITM~) BEGIN
      SAY NAME1 ~Firecam Full-Plate Mail~
      SAY NAME2 ~Firecam Full-Plate Mail +1~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~OGIEN.ITM~) BEGIN
      SAY NAME2 ~Ogien's Scale +4~
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT02.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT04.ITM~) BEGIN
      SAY NAME2 ~Full Plate Mail~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT05.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT06.ITM~) BEGIN
      SAY NAME1 ~Ankheg Plate Mail~
      SAY NAME2 ~Ankheg Plate Mail +2~
      WRITE_BYTE 0x18 ("%flags%" BOR 0b01000000)
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT08.ITM~) BEGIN
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT09.ITM~) BEGIN
      SAY NAME1 ~Field Plate Mail~
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT10.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT11.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT14.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT18.ITM~) BEGIN
      SAY NAME2 ~Red Dragon Scale +2~
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLAT19.ITM~) BEGIN
      SAY NAME2 ~Full Plate Mail +2~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLATCM01.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLATCM02.ITM~) BEGIN
      SAY NAME2 ~Demon Plate +4~
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLATCM03.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLATCM04.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLATGR01.ITM~) BEGIN
      SAY NAME1 ~Chitinous Plate Mail~
      SAY NAME2 ~Chitinous Plate Mail +1~
      WRITE_BYTE 0x18 ("%flags%" BOR 0b01000000)
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~PLATGR02.ITM~) BEGIN
      SAY NAME2 ~Plate Mail of Fear +1~
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~POTN18.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~POTN24.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~POTN46.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~R!KITPLT.ITM~) BEGIN
      SAY NAME1 ~Plate Mail~
      SAY NAME2 ~Bringer of Vengeance +4~
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~RR#ABIH.ITM~) BEGIN
      SAY NAME2 ~Abishai Hide +3~
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~RR#CHN01.ITM~) BEGIN
      SAY NAME2 ~Drow Chain Mail +1~
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~S!CHAN01.ITM~) BEGIN
      WRITE_BYTE 0x60 6
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~S!LEAT01.ITM~) BEGIN
      SAY NAME2 ~Human Flesh +6~
      WRITE_BYTE 0x60 6
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~S!LEAT02.ITM~) BEGIN
      SAY NAME2 ~Spirit of the Night +6~
      WRITE_BYTE 0x60 6
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~S!LEAT03.ITM~) BEGIN
      SAY NAME2 ~Corthala Family Armor +6~
      WRITE_BYTE 0x60 6
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~S!PLAT01.ITM~) BEGIN
      SAY NAME2 ~Pride of the Legion +4~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~S!PLAT03.ITM~) BEGIN
      SAY NAME1 ~Ankheg Plate Mail~
      SAY NAME2 ~Ankheg Plate Mail +5~
      WRITE_BYTE 0x18 ("%flags%" BOR 0b01000000)
      WRITE_BYTE 0x60 5
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~S!PLAT04.ITM~) BEGIN
      SAY NAME1 ~Firecam Full Plate Mail~
      SAY NAME2 ~Firecam Full Plate Mail +3~
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~SCAL01.ITM~) BEGIN
      WRITE_LONG 0x54 0xffffffff // non-magical, doesn't need identified_desc
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~SCAL02.ITM~) BEGIN
      WRITE_LONG 0x34 1600 // too cheap for +1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~SHARARM.ITM~) BEGIN
      WRITE_BYTE 0x60 9
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~SHPLATE.ITM~) BEGIN
      SAY NAME2 ~Shadowed Plate +3~
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~SLAYER3.ITM~) BEGIN
      READ_LONG NAME2 temp // move id strings to unid strings
      WRITE_LONG NAME1 %temp%
      READ_LONG 0x54 temp
      WRITE_LONG 0x50 %temp%
      WRITE_BYTE 0x18 ("%flags%" BAND 0b10111111) // switch off magical flag
      WRITE_LONG 0x54 0xffffffff // non-magical, doesn't need identified_desc
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~SWANARM.ITM~) BEGIN
      SAY NAME2 ~Black Swan Armor +2~
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~TAMCHAIN.ITM~) BEGIN
      WRITE_BYTE 0x60 5
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~TG#BSP2.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~TTLEAT.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~U#CHAN07.ITM~) BEGIN
      SAY NAME1 ~Chain Mail~
      SAY NAME2 ~Elven Chain of the Hand +3~
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~U#HFHEAH.ITM~) BEGIN
      SAY NAME2 ~Cornugan Hide Armor +1~
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~UMHULK.ITM~) BEGIN
      SAY NAME2 ~Umber Hulk Plate +1~
      WRITE_BYTE 0x18 ("%flags%" BOR 0b01000000)
      WRITE_BYTE 0x60 1
      READ_LONG  0x50  uniddescref
      WRITE_LONG 0x54  %uniddescref%
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~USLTR01.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~USLTR2A.ITM~) BEGIN
      WRITE_BYTE 0x60 1
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~USLTR3A.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~USLTR4A.ITM~) BEGIN
      WRITE_BYTE 0x60 3
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~USLTR5A.ITM~) BEGIN
      WRITE_BYTE 0x60 4
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~VEXBAD.ITM~) BEGIN
      SAY NAME2 ~Vexed Armor +2~
      WRITE_BYTE 0x60 2
    END
    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~VEXDL.ITM~) BEGIN
      SAY NAME2 ~Vexed Armor +2~
      WRITE_BYTE 0x60 2
    END
    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~VEXED.ITM~) BEGIN
      SAY NAME2 ~Vexed Armor +2~
      WRITE_BYTE 0x60 2
    END
    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~VEXED2.ITM~) BEGIN
      SAY NAME2 ~Vexed Armor +2~
      WRITE_BYTE 0x60 2
    END
    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~VEXED3.ITM~) BEGIN
      SAY NAME2 ~Vexed Armor +2~
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~WA2ROBE.ITM~) BEGIN
      WRITE_BYTE 0x60 5
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~XCHAN03.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

    PATCH_IF ("%SOURCE_FILE%" STRING_EQUAL ~XLEAT03.ITM~) BEGIN
      WRITE_BYTE 0x60 2
    END

  END
  BUT_ONLY_IF_IT_CHANGES


PRINT ~Defining local macros...~

// define local pseudomacros

<<<<<<<< delitmfx.tpp
DELETE_BYTES %fxoff% + 0x30 * %x% + 0  0x30
SET fxnum = %fxnum% - 1
SET x = %x% - 1
>>>>>>>>

<<<<<<<< additmfx.tpp
INSERT_BYTES    %fxoff% + 0x30 * %fxnum%        0x30
WRITE_SHORT     %fxoff% + 0x30 * %fxnum% + 0x00 %opcode%
WRITE_BYTE      %fxoff% + 0x30 * %fxnum% + 0x02 1           // target self
WRITE_BYTE      %fxoff% + 0x30 * %fxnum% + 0x03 0           // power
WRITE_LONG      %fxoff% + 0x30 * %fxnum% + 0x04 %param1%
WRITE_LONG      %fxoff% + 0x30 * %fxnum% + 0x08 %param2%
WRITE_BYTE      %fxoff% + 0x30 * %fxnum% + 0x0c 2           // while equipped
WRITE_BYTE      %fxoff% + 0x30 * %fxnum% + 0x0d 0           // nonmagical
WRITE_LONG      %fxoff% + 0x30 * %fxnum% + 0x0e 0           // duration, n/a
WRITE_BYTE      %fxoff% + 0x30 * %fxnum% + 0x12 100         // probability upper
WRITE_BYTE      %fxoff% + 0x30 * %fxnum% + 0x13 0           // probability lower ... so this is 0-100 of a 0-100 range.
WRITE_LONG      %fxoff% + 0x30 * %fxnum% + 0x14 0           // resref dw 1, n/a
WRITE_LONG      %fxoff% + 0x30 * %fxnum% + 0x18 0           // resref dw 2, n/a
WRITE_LONG      %fxoff% + 0x30 * %fxnum% + 0x1c 0           // dice thrown, n/a
WRITE_LONG      %fxoff% + 0x30 * %fxnum% + 0x20 0           // dice sides, n/a
WRITE_LONG      %fxoff% + 0x30 * %fxnum% + 0x24 0           // save type, n/a
WRITE_LONG      %fxoff% + 0x30 * %fxnum% + 0x28 0           // save bonus, n/a
WRITE_LONG      %fxoff% + 0x30 * %fxnum% + 0x2c 0           // unknown, n/a
SET fxnum = %fxnum% + 1
>>>>>>>>

<<<<<<<< addsplfx.tpp
INSERT_BYTES    %fx_start% + 0x30 * %index2%        0x30
WRITE_SHORT     %fx_start% + 0x30 * %index2% + 0x00 %opcode%
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x02 2           // target pre-target
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x03 %power%     // power (spl level, mostly)
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x04 %param1%
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x08 %param2%
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x0c 0           // timing: duration
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x0d 3           // dispellable/bypass resistance
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x0e %duration%  // duration
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x12 100         // probability upper
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x13 0           // probability lower ... so this is 0-100 of a 0-100 range.
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x14 0           // resref dw 1, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x18 0           // resref dw 2, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x1c 0           // dice thrown, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x20 0           // dice sides, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x24 0           // save type, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x28 0           // save bonus, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x2c 0           // unknown, n/a
SET fx_num = %fx_num% + 1
SET accum_adj = %accum_adj% + 1
>>>>>>>>

<<<<<<<< addpotfx.tpp
INSERT_BYTES    %fx_start% + 0x30 * %index2%        0x30
WRITE_SHORT     %fx_start% + 0x30 * %index2% + 0x00 %opcode%
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x02 1           // target self
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x03 %power%     // power (various)
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x04 %param1%
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x08 %param2%
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x0c 0           // timing: duration
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x0d 3           // dispellable/bypass resistance
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x0e %duration%  // duration
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x12 100         // probability upper
WRITE_BYTE      %fx_start% + 0x30 * %index2% + 0x13 0           // probability lower ... so this is 0-100 of a 0-100 range.
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x14 0           // resref dw 1, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x18 0           // resref dw 2, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x1c 0           // dice thrown, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x20 0           // dice sides, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x24 0           // save type, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x28 0           // save bonus, n/a
WRITE_LONG      %fx_start% + 0x30 * %index2% + 0x2c 0           // unknown, n/a
SET fx_num = %fx_num% + 1
SET accum_adj = %accum_adj% + 1
>>>>>>>>

// takes intopcode, intparam, returns returnval, clobbers fxnum fxoff opcode param1 param2 i.
<<<<<<<< sumfx.tpp
READ_SHORT 0x70 fxnum
READ_LONG 0x6a fxoff
SET returnval = 0

FOR (i=0; (i < %fxnum%); i+=1) BEGIN
    READ_SHORT %fxoff% + 0x30 * %i% + 0     opcode
    READ_SLONG  %fxoff% + 0x30 * %i% + 0x04  param1
    READ_SLONG  %fxoff% + 0x30 * %i% + 0x08  param2

    PATCH_IF ( %opcode% = %intopcode% ) BEGIN
      PATCH_IF ( %intparam% = 1 ) BEGIN
        SET returnval = %returnval% + %param1%
      END
      PATCH_IF ( %intparam% = 2 ) BEGIN
        SET returnval = %returnval% + %param2%
      END
    END
END

PATCH_IF ( %returnval% > 100 ) BEGIN
    SET returnval = 100
END
>>>>>>>>

PRINT ~Detecting game engine...~
ACTION_IF ENGINE_IS ~soa~ BEGIN
  OUTER_SPRINT gameiam ~soa~
  PRINT ~ BG2: SOA...~
END
ACTION_IF ENGINE_IS ~tob~ BEGIN
  OUTER_SPRINT gameiam ~tob~
  PRINT ~ BG2: TOB...~
END
ACTION_IF ENGINE_IS ~iwd~ BEGIN
  OUTER_SPRINT gameiam ~iwd~
  PRINT ~ IWD...~
END
ACTION_IF ENGINE_IS ~how~ BEGIN
  OUTER_SPRINT gameiam ~how~
  PRINT ~ IWD: HoW...~
END
// needs weidu > 208 release
ACTION_IF ENGINE_IS ~totlm~ BEGIN
  OUTER_SPRINT gameiam ~totlm~
  PRINT ~ IWD: ToTLM...~
END
ACTION_IF ENGINE_IS ~iwd2~ BEGIN
  OUTER_SPRINT gameiam ~iwd2~
  PRINT ~ IWD2...~
END
// needs weidu 208.34 or later ... or iwd/how/totlm is detected as pst as well
ACTION_IF ENGINE_IS ~pst~ BEGIN
  OUTER_SPRINT gameiam ~pst~
  PRINT ~ PST...~
END
ACTION_IF ENGINE_IS ~bg1~ BEGIN
  OUTER_SPRINT gameiam ~bg1~
  PRINT ~ BG...~
END
ACTION_IF ENGINE_IS ~totsc~ BEGIN
  OUTER_SPRINT gameiam ~totsc~
  PRINT ~ BG: TotSC...~
END

PRINT ~Reading datafiles...~

COPY_EXISTING - ~fullplate/classification.txt~ ~fullplate~
    COUNT_2DA_ROWS 0 ~entrycount~
    FOR (i=0;i<~%entrycount%~;i=i+1) BEGIN
        SPRINT game ~~
        READ_2DA_ENTRY ~%i%~ 0 0 ~name~
        READ_2DA_ENTRY ~%i%~ 1 0 ~class~
        READ_2DA_ENTRY ~%i%~ 2 0 ~game~
        TO_LOWER name
        TO_LOWER class
        TO_LOWER game
        PATCH_IF ( ~%game%~ STRING_EQUAL ~all~ || ~%game%~ STRING_EQUAL ~%gameiam%~ ) BEGIN
          SPRINT $class(~%name%~) ~%class%~
        END
    END
    BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING - ~fullplate/thebiglist.txt~ ~fullplate~
    COUNT_2DA_ROWS 0 ~entrycount~
    FOR (i=0;i<~%entrycount%~;i=i+1) BEGIN
        READ_2DA_ENTRY ~%i%~ 0 0 ~name~
        READ_2DA_ENTRY ~%i%~ 1 0 ~_weight~
        READ_2DA_ENTRY ~%i%~ 2 0 ~_dexmod~
        READ_2DA_ENTRY ~%i%~ 3 0 ~_movemod~
        READ_2DA_ENTRY ~%i%~ 4 0 ~_wpnspeedmod~
        READ_2DA_ENTRY ~%i%~ 5 0 ~_baseac~
        READ_2DA_ENTRY ~%i%~ 6 0 ~_slashac~
        READ_2DA_ENTRY ~%i%~ 7 0 ~_crushac~
        READ_2DA_ENTRY ~%i%~ 8 0 ~_pierceac~
        READ_2DA_ENTRY ~%i%~ 9 0 ~_missileac~ /* really only here for the missile attractor */
        READ_2DA_ENTRY ~%i%~ 10 0 ~_slashres~
        READ_2DA_ENTRY ~%i%~ 11 0 ~_crushres~
        READ_2DA_ENTRY ~%i%~ 12 0 ~_pierceres~
        READ_2DA_ENTRY ~%i%~ 13 0 ~_missileres~
        READ_2DA_ENTRY ~%i%~ 14 0 ~_fireres~
        READ_2DA_ENTRY ~%i%~ 15 0 ~_coldres~
        READ_2DA_ENTRY ~%i%~ 16 0 ~_hidemod~
        READ_2DA_ENTRY ~%i%~ 17 0 ~_movesilmod~
        READ_2DA_ENTRY ~%i%~ 18 0 ~_openlockmod~
        READ_2DA_ENTRY ~%i%~ 19 0 ~_disarmtrapmod~
        READ_2DA_ENTRY ~%i%~ 20 0 ~_pickpocketmod~
        READ_2DA_ENTRY ~%i%~ 21 0 ~_spellfailmod~

        TO_LOWER name

        SPRINT $weight(~%name%~)        ~%_weight%~
        SPRINT $dexmod(~%name%~)        ~%_dexmod%~
        SPRINT $movemod(~%name%~)       ~%_movemod%~
        SPRINT $wpnspeedmod(~%name%~)   ~%_wpnspeedmod%~
        SPRINT $baseac(~%name%~)        ~%_baseac%~
        SPRINT $slashac(~%name%~)       ~%_slashac%~
        SPRINT $crushac(~%name%~)       ~%_crushac%~
        SPRINT $pierceac(~%name%~)      ~%_pierceac%~
        SPRINT $missileac(~%name%~)     ~%_missileac%~
        SPRINT $slashres(~%name%~)      ~%_slashres%~
        SPRINT $crushres(~%name%~)      ~%_crushres%~
        SPRINT $pierceres(~%name%~)     ~%_pierceres%~
        SPRINT $missileres(~%name%~)    ~%_missileres%~
        SPRINT $fireres(~%name%~)       ~%_fireres%~
        SPRINT $coldres(~%name%~)       ~%_coldres%~
        SPRINT $hidemod(~%name%~)       ~%_hidemod%~
        SPRINT $movesilmod(~%name%~)    ~%_movesilmod%~
        SPRINT $openlockmod(~%name%~)   ~%_openlockmod%~
        SPRINT $disarmtrapmod(~%name%~) ~%_disarmtrapmod%~
        SPRINT $pickpocketmod(~%name%~) ~%_pickpocketmod%~
        SPRINT $spellfailmod(~%name%~)  ~%_spellfailmod%~
    END
    BUT_ONLY_IF_IT_CHANGES

// allows us to regexp match tabs and newlines
INCLUDE ~fullplate/extra_regexp_vars.tph~

//////////////////////////////////////
// profit! and take over the world! //
//////////////////////////////////////
PRINT ~Reworking items and updating descriptions...~

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~

  PATCH_IF (SOURCE_SIZE < 0x72) BEGIN
    // PATCH_PRINT "%SOURCE_FILE%: Invalid, below minimum size"
  END ELSE BEGIN
    // small workaround: remove DEX requirements, so npcs still can
    //  use their custom equipment with (very) heavy armour.
	WRITE_BYTE 0x2c 0

    READ_BYTE 0x1c itemtype
    READ_LONG 0x60 enchantment

    SPRINT usename ~~
    TO_LOWER SOURCE_RES

    // armor type defined for the item in classifications.txt?
    //  (we can guess based on animation type, if not)
    SPRINT classdefined $class(~%SOURCE_RES%~)
    PATCH_IF NOT (~%classdefined%~ STRING_CONTAINS_REGEXP ~class~ == 0) BEGIN
        SPRINT tempname ~%classdefined%%enchantment%~
        
        // stats listed in thebiglist.txt for the generic armor type?
        SPRINT classenchant $weight(~%tempname%~)
        PATCH_IF NOT (~%classenchant%~ STRING_CONTAINS_REGEXP ~weight~ == 0) BEGIN
            SPRINT usename ~%tempname%~
        END
    END
    
    PATCH_IF NOT ( ~%usename%~ STRING_EQUAL ~~ ) BEGIN
        // adjustments listed in thebiglist.txt for the specific armor?
        SPRINT specialcase $weight(~%SOURCE_RES%~)
        PATCH_IF NOT (~%specialcase%~ STRING_CONTAINS_REGEXP ~weight~ == 0) BEGIN
            SET $weight(~%SOURCE_RES%~)         = $weight(~%SOURCE_RES%~) + $weight(~%usename%~)
            SET $dexmod(~%SOURCE_RES%~)         = $dexmod(~%SOURCE_RES%~) + $dexmod(~%usename%~)
            SET $movemod(~%SOURCE_RES%~)        = $movemod(~%SOURCE_RES%~) + $movemod(~%usename%~)
            SET $wpnspeedmod(~%SOURCE_RES%~)    = $wpnspeedmod(~%SOURCE_RES%~) + $wpnspeedmod(~%usename%~)
            SET $baseac(~%SOURCE_RES%~)         = $baseac(~%SOURCE_RES%~) + $baseac(~%usename%~)
            SET $slashac(~%SOURCE_RES%~)        = $slashac(~%SOURCE_RES%~) + $slashac(~%usename%~)
            SET $crushac(~%SOURCE_RES%~)        = $crushac(~%SOURCE_RES%~) + $crushac(~%usename%~)
            SET $pierceac(~%SOURCE_RES%~)       = $pierceac(~%SOURCE_RES%~) + $pierceac(~%usename%~)
            SET $missileac(~%SOURCE_RES%~)      = $missileac(~%SOURCE_RES%~) + $missileac(~%usename%~)
            SET $slashres(~%SOURCE_RES%~)       = $slashres(~%SOURCE_RES%~) + $slashres(~%usename%~)
            SET $crushres(~%SOURCE_RES%~)       = $crushres(~%SOURCE_RES%~) + $crushres(~%usename%~)
            SET $pierceres(~%SOURCE_RES%~)      = $pierceres(~%SOURCE_RES%~) + $pierceres(~%usename%~)
            SET $missileres(~%SOURCE_RES%~)     = $missileres(~%SOURCE_RES%~) + $missileres(~%usename%~)
            SET $fireres(~%SOURCE_RES%~)        = $fireres(~%SOURCE_RES%~) + $fireres(~%usename%~)
            SET $coldres(~%SOURCE_RES%~)        = $coldres(~%SOURCE_RES%~) + $coldres(~%usename%~)
            SET $hidemod(~%SOURCE_RES%~)        = $hidemod(~%SOURCE_RES%~) + $hidemod(~%usename%~)
            SET $movesilmod(~%SOURCE_RES%~)     = $movesilmod(~%SOURCE_RES%~) + $movesilmod(~%usename%~)
            SET $openlockmod(~%SOURCE_RES%~)    = $openlockmod(~%SOURCE_RES%~) + $openlockmod(~%usename%~)
            SET $disarmtrapmod(~%SOURCE_RES%~)  = $disarmtrapmod(~%SOURCE_RES%~) + $disarmtrapmod(~%usename%~)
            SET $pickpocketmod(~%SOURCE_RES%~)  = $pickpocketmod(~%SOURCE_RES%~) + $pickpocketmod(~%usename%~)
            SET $spellfailmod(~%SOURCE_RES%~)   = $spellfailmod(~%SOURCE_RES%~) + $spellfailmod(~%usename%~)
            SPRINT usename ~%SOURCE_RES%~
        END
    END

    READ_SHORT 0x70 fxnum
    PATCH_IF (fxnum > 0) BEGIN // has equipping effects, i.e. not a potion or similar

    ///////////////////////////////
    // armour updates start here //
    ///////////////////////////////

        PATCH_IF NOT ( ~%usename%~ STRING_EQUAL ~~ ) BEGIN
            PATCH_IF ($weight(~%usename%~) > 0) BEGIN
                WRITE_LONG 0x4c $weight(~%usename%~)
            END
        END

        PATCH_IF NOT ( ~%usename%~ STRING_EQUAL ~~ ) BEGIN
            /* We have something to do, yay */
            READ_SHORT 0x70 fxnum
            READ_LONG 0x6a fxoff

            FOR (x=0; (x < %fxnum%); x+=1) BEGIN
                READ_SHORT %fxoff% + 0x30 * %x% + 0     opcode
                READ_LONG  %fxoff% + 0x30 * %x% + 0x04  param1
                READ_LONG  %fxoff% + 0x30 * %x% + 0x08  param2

                PATCH_IF (
                    (%opcode% = 0) ||                                       // any AC effects
                    (%opcode% = 145 && %param2% = 0) ||                     // wizard spell disable
                    (%opcode% = 144 && (%param2% = 0 || %param2% = 1)) ||   // stealth/thieving disable
                    (%opcode% = 59 && %param1% < 0) ||                      // move silently penalty (but keep bonuses)
                    (%opcode% = 275 && %param1% < 0) ||                     // hide in shadows penalty
                    (%opcode% = 90 && %param1% < 0) ||                      // open lock penalty
                    (%opcode% = 91 && %param1% < 0) ||                      // find trap penalty
                    (%opcode% = 92 && %param1% < 0) ||                      // pickpocket penalty
                    (%opcode% = 126 && %param1% < 0 && %param2% = 0)        // movement slowdown
                      ) BEGIN
                    PATCH_INCLUDE ~delitmfx.tpp~                            // kill them. we'll add some back.
                END
            END

            WRITE_SHORT 0x70 %fxnum%

            PATCH_FOR_EACH param IN ~dexmod~ ~movemod~ ~wpnspeedmod~ ~baseac~ ~slashac~ ~crushac~ ~pierceac~ ~missileac~
                                    ~slashres~ ~crushres~ ~pierceres~ ~missileres~ ~fireres~ ~coldres~
                                    ~hidemod~ ~movesilmod~ ~openlockmod~ ~disarmtrapmod~ ~pickpocketmod~
                                    ~spellfailmod~
            BEGIN
                SET x = EVALUATE_BUFFER ~%%param%_%usename%%~
                PATCH_IF NOT ((x = 0 && NOT ~%param%~ STRING_EQUAL ~baseac~) || (x = 10 && ~%param%~ STRING_EQUAL ~baseac~)) BEGIN 
                    PATCH_IF ~%param%~ STRING_EQUAL dexmod BEGIN
                        SET opcode = 15
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL movemod BEGIN
                        SET opcode = 176
                        SET param1 = 0 - (x / 10)
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL wpnspeedmod BEGIN
                        SET opcode = 190
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL baseac BEGIN
                        SET opcode = 0
                        SET param1 = x
                        SET param2 = 16
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL slashac BEGIN
                        SET opcode = 0
                        SET param1 = x
                        SET param2 = 8
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL crushac BEGIN
                        SET opcode = 0
                        SET param1 = x
                        SET param2 = 1
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL pierceac BEGIN
                        SET opcode = 0
                        SET param1 = x
                        SET param2 = 4
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL missileac BEGIN
                        SET opcode = 0
                        SET param1 = x
                        SET param2 = 2
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL slashres BEGIN
                        SET opcode = 86
                        SET param1 = x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL crushres BEGIN
                        SET opcode = 87
                        SET param1 = x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL pierceres BEGIN
                        SET opcode = 88
                        SET param1 = x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL missileres BEGIN
                        SET opcode = 89
                        SET param1 = x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL fireres BEGIN
                        SET opcode = 30
                        SET param1 = x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL coldres BEGIN
                        SET opcode = 28
                        SET param1 = x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF (~%param%~ STRING_EQUAL hidemod && (ENGINE_IS ~ToB~ || ENGINE_IS ~SoA~)) BEGIN
                        SET opcode = 275
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL movesilmod BEGIN
                        SET opcode = 59
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL openlockmod BEGIN
                        SET opcode = 90
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL disarmtrapmod BEGIN
                        SET opcode = 91
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL pickpocketmod BEGIN
                        SET opcode = 92
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL spellfailmod BEGIN
                        SET opcode = 60
                        SET param1 = x
                        SET param2 = 0
                        PATCH_INCLUDE ~additmfx.tpp~ END
                END // if param modified
            END // for param

            WRITE_SHORT 0x70 %fxnum%

        END // if usename

        // Pass #2: sum, change to static and replace armour resistance effects
        PATCH_IF (itemtype == 0x02) BEGIN
            PATCH_IF NOT ( ~%usename%~ STRING_EQUAL ~~ ) BEGIN
                PATCH_FOR_EACH param IN ~slashres~ ~crushres~ ~pierceres~ ~missileres~ BEGIN
                     SET y = EVALUATE_BUFFER ~%%param%_%usename%%~
                     PATCH_IF NOT (y == 0) BEGIN 
                         PATCH_IF ~%param%~ STRING_EQUAL slashres BEGIN
                             SET intopcode = 86
                             SET intparam = 1
                             PATCH_INCLUDE ~sumfx.tpp~
                             READ_SHORT 0x70 fxnum
                             READ_LONG 0x6a fxoff
                             FOR (x=0; (x < %fxnum%); x+=1) BEGIN
                                 READ_SHORT %fxoff% + 0x30 * %x% + 0     opcode
                                 READ_LONG  %fxoff% + 0x30 * %x% + 0x04  param1
                                 READ_LONG  %fxoff% + 0x30 * %x% + 0x08  param2
                                 PATCH_IF
                                     (%opcode% = 86) BEGIN
                                     PATCH_INCLUDE ~delitmfx.tpp~
                                 END
                             END
                             SET opcode = 86
                             SET param1 = %returnval%
                             SET param2 = 1
                             PATCH_INCLUDE ~additmfx.tpp~
                             WRITE_SHORT 0x70 %fxnum%
                             END

                         PATCH_IF ~%param%~ STRING_EQUAL crushres BEGIN
                             SET intopcode = 87
                             SET intparam = 1
                             PATCH_INCLUDE ~sumfx.tpp~
                             READ_SHORT 0x70 fxnum
                             READ_LONG 0x6a fxoff
                             FOR (x=0; (x < %fxnum%); x+=1) BEGIN
                                 READ_SHORT %fxoff% + 0x30 * %x% + 0     opcode
                                 READ_LONG  %fxoff% + 0x30 * %x% + 0x04  param1
                                 READ_LONG  %fxoff% + 0x30 * %x% + 0x08  param2
                                 PATCH_IF
                                     (%opcode% = 87) BEGIN
                                     PATCH_INCLUDE ~delitmfx.tpp~
                                 END
                             END
                             SET opcode = 87
                             SET param1 = %returnval%
                             SET param2 = 1
                             PATCH_INCLUDE ~additmfx.tpp~
                             WRITE_SHORT 0x70 %fxnum%
                             END

                         PATCH_IF ~%param%~ STRING_EQUAL pierceres BEGIN
                             SET intopcode = 88
                             SET intparam = 1
                             PATCH_INCLUDE ~sumfx.tpp~
                             READ_SHORT 0x70 fxnum
                             READ_LONG 0x6a fxoff
                             FOR (x=0; (x < %fxnum%); x+=1) BEGIN
                                 READ_SHORT %fxoff% + 0x30 * %x% + 0     opcode
                                 READ_LONG  %fxoff% + 0x30 * %x% + 0x04  param1
                                 READ_LONG  %fxoff% + 0x30 * %x% + 0x08  param2
                                 PATCH_IF
                                     (%opcode% = 88) BEGIN
                                     PATCH_INCLUDE ~delitmfx.tpp~
                                 END
                             END
                             SET opcode = 88
                             SET param1 = %returnval%
                             SET param2 = 1
                             PATCH_INCLUDE ~additmfx.tpp~
                             WRITE_SHORT 0x70 %fxnum%
                             END

                         PATCH_IF ~%param%~ STRING_EQUAL missileres BEGIN
                             SET intopcode = 89
                             SET intparam = 1
                             PATCH_INCLUDE ~sumfx.tpp~
                             READ_SHORT 0x70 fxnum
                             READ_LONG 0x6a fxoff
                             FOR (x=0; (x < %fxnum%); x+=1) BEGIN
                                 READ_SHORT %fxoff% + 0x30 * %x% + 0     opcode
                                 READ_LONG  %fxoff% + 0x30 * %x% + 0x04  param1
                                 READ_LONG  %fxoff% + 0x30 * %x% + 0x08  param2
                                 PATCH_IF
                                     (%opcode% = 89) BEGIN
                                     PATCH_INCLUDE ~delitmfx.tpp~
                                 END
                             END
                             SET opcode = 89
                             SET param1 = %returnval%
                             SET param2 = 1
                             PATCH_INCLUDE ~additmfx.tpp~
                             WRITE_SHORT 0x70 %fxnum%
                             END

                     END // if param
                END // for param
            END // if usename
        END // if type = armour

        /* Description updates */
        PATCH_IF NOT ( ~%usename%~ STRING_EQUAL ~~ ) BEGIN
            READ_STRREF 0x50 uniddesc ELSE ~nope~
            READ_STRREF 0x54 iddesc ELSE ~nope~

            SET resistanceheaderprinted = 0
            SET slowheaderprinted = 0

            // add empty line below the STATISTICS header, if there is none
            SPRINT searchstring   ~STATISTICS.*%wnl%[ %tab%]*[a-zA-Z0-9+]~
            SPRINT insertafter    ~gnurf~
            SPRINT replacestring  ~STATISTICS.*%wnl%~
            SPRINT insertstring   ~STATISTICS:%wnl%%wnl%~
            PATCH_INCLUDE ~fullplate/descupd_magic.tpp~

            // custom fixups for missing STATISTICS header
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~umhulk~) BEGIN // IWD, Umber Hulk Plate
              SPRINT searchstring   ~THISWILLNEVERMATCH~
              SPRINT insertafter    ~\(umber hulk exoskeletons, cured and reinforced the armor.\)~
              SPRINT replacestring  ~NOTHINGDAMNIT~
              SPRINT insertstring   ~%wnl%%wnl%STATISTICS:%wnl%~
              PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~leatgr02~) BEGIN // Auril's Bane, Padded Armour
              SPRINT searchstring   ~THISWILLNEVERMATCH~
              SPRINT insertafter    ~\(disrupt their spellcasting ability.\)~
              SPRINT replacestring  ~NOTHINGDAMNIT~
              SPRINT insertstring   ~%wnl%%wnl%STATISTICS:%wnl%~
              PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~changr02~) BEGIN // Auril's Bane, Zeddek's Skin
              SPRINT searchstring   ~THISWILLNEVERMATCH~
              SPRINT insertafter    ~\(Silanna as a reward for her loyalty and bravery.\)~
              SPRINT replacestring  ~NOTHINGDAMNIT~
              SPRINT insertstring   ~%wnl%%wnl%STATISTICS:%wnl%%wnl%~
              PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~platgr01~) BEGIN // Auril's Bane, Chitinous Plate Mail
              SPRINT searchstring   ~THISWILLNEVERMATCH~
              SPRINT insertafter    ~\(but fatigue is a constant enemy.\)~
              SPRINT replacestring  ~NOTHINGDAMNIT~
              SPRINT insertstring   ~%wnl%%wnl%STATISTICS:%wnl%~
              PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END

            // kill whitespace at beginning of line, repeatedly
            SPRINT searchstring   ~^[ %tab%]+.*~
            SPRINT insertafter    ~gnurf~
            SPRINT replacestring  ~^[ %tab%]+~
            SPRINT insertstring   ~~
            PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            PATCH_INCLUDE ~fullplate/descupd_magic.tpp~

            PATCH_FOR_EACH param IN ~weight~ ~dexmod~ ~movemod~ ~wpnspeedmod~ ~baseac~ ~slashac~ ~crushac~ ~pierceac~ ~missileac~
                                    ~slashres~ ~crushres~ ~pierceres~ ~missileres~ ~fireres~ ~coldres~
                                    ~spellfailmod~ ~pickpocketmod~ ~disarmtrapmod~ ~openlockmod~ ~movesilmod~ ~hidemod~ 
            BEGIN

                 SET x = EVALUATE_BUFFER ~%%param%_%usename%%~
                 PATCH_IF NOT ((x = 0 && NOT ~%param%~ STRING_EQUAL ~baseac~) || (x = 10 && ~%param%~ STRING_EQUAL ~baseac~)) BEGIN 
                     PATCH_IF ~%param%~ STRING_EQUAL weight BEGIN
                         SPRINT searchstring   ~Weight:~
                         SPRINT insertafter    ~\(STATISTICS.*[%wnl%%lnl%%mnl%].*[%wnl%%lnl%%mnl%].*[%wnl%%lnl%%mnl%]\)~
                         SPRINT replacestring  ~Weight:[%tab% ]*[0-9]+[%tab% a-zA-Z.]*~
                         SPRINT insertstring   ~Weight: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL baseac BEGIN // kill "AC:" lines
                         SPRINT searchstring   ~^AC~
                         SPRINT insertafter    ~\(STATISTICS\)~
                         SPRINT replacestring  ~^AC[%tab% :]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+~
                         SPRINT insertstring   ~~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL baseac BEGIN
                         SPRINT searchstring   ~Armor Class:~
                         SPRINT insertafter    ~\(STATISTICS.*[%wnl%%lnl%%mnl%].*[%wnl%%lnl%%mnl%]\)~
                         SPRINT replacestring  ~Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*~
                         SPRINT insertstring   ~Armor Class: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ((~%param%~ STRING_EQUAL slashres || ~%param%~ STRING_EQUAL crushres ||
                                ~%param%~ STRING_EQUAL pierceres || ~%param%~ STRING_EQUAL missileres)
                                && resistanceheaderprinted = 0) BEGIN
                         SPRINT searchstring   ~THISWILLNEVERMATCH~
                         SPRINT insertafter    ~\(STATISTICS.*[%wnl%%lnl%%mnl%].*[%wnl%%lnl%%mnl%]\)~
                         SPRINT replacestring  ~~
                         SPRINT insertstring   ~Protection:%wnl% vs. Slash/Crush/Pierce/Missile:%wnl%  0 / 0 / 0 / 0~
                         SET resistanceheaderprinted = 1
                         SET slashrestotal = 0
                         SET crushrestotal = 0
                         SET piercerestotal = 0
                         SET missilerestotal = 0
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL slashres BEGIN
                         SET intopcode = 86
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET slashrestotal = %returnval%
                         END

                     PATCH_IF ~%param%~ STRING_EQUAL crushres BEGIN
                         SET intopcode = 87
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET crushrestotal = %returnval%
                         END

                     PATCH_IF ~%param%~ STRING_EQUAL pierceres BEGIN
                         SET intopcode = 88
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET piercerestotal = %returnval%
                         END

                     PATCH_IF ~%param%~ STRING_EQUAL missileres BEGIN
                         SET intopcode = 89
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET missilerestotal = %returnval%
                         END

                     PATCH_IF ((~%param%~ STRING_EQUAL dexmod || ~%param%~ STRING_EQUAL movemod ||
                                ~%param%~ STRING_EQUAL wpnspeedmod)
                                && slowheaderprinted = 0) BEGIN
                         SPRINT searchstring   ~THISWILLNEVERMATCH~
                         SPRINT insertafter    ~\(STATISTICS.*[%wnl%%lnl%%mnl%].*[%wnl%%lnl%%mnl%]\)~
                         SPRINT replacestring  ~~
                         SPRINT insertstring   ~Slowdown:%wnl% Dex/Move Speed/Weapon Speed Factor:%wnl%  0 / 0 / 0 ~
                         SET slowheaderprinted = 1
                         SET dexmodtotal = 0
                         SET movemodtotal = 0
                         SET wpnspeedtotal = 0
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL dexmod BEGIN // kill various DEX lines
                         SPRINT searchstring   ~DEX bonus~
                         SPRINT insertafter    ~\(STATISTICS\)~
                         SPRINT replacestring  ~+[1-9] DEX bonus, ~
                         SPRINT insertstring   ~~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
                         SPRINT searchstring   ~Bonus.*Dexterity~
                         SPRINT insertafter    ~\(STATISTICS\)~
                         SPRINT replacestring  ~Bonus.*Dexterity[%wnl%%lnl%%mnl%]~
                         SPRINT insertstring   ~~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
                         SPRINT searchstring   ~.*Dexterity~
                         SPRINT insertafter    ~\(STATISTICS\)~
                         SPRINT replacestring  ~.*Dexterity[%wnl%%lnl%%mnl%]~
                         SPRINT insertstring   ~~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
                         SET intopcode = 15
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET dexmodtotal = %returnval%
                         END

                     PATCH_IF ~%param%~ STRING_EQUAL movemod BEGIN
                         SET intopcode = 176
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET movemodtotal = %returnval% * 10
                         END

                     PATCH_IF ~%param%~ STRING_EQUAL wpnspeedmod BEGIN
                         SET intopcode = 190
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET wpnspeedtotal = 0 - %returnval%
                         PATCH_IF (wpnspeedtotal > 0) BEGIN
                           SPRINT wpnspeedtotal ~+%wpnspeedtotal%~
                         END
                         END

                     PATCH_IF (~%param%~ STRING_EQUAL hidemod && (ENGINE_IS ~ToB~ || ENGINE_IS ~SoA~)) BEGIN
                         SET intopcode = 275
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET x = %returnval%
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~+%x%~
                         END
                         SPRINT searchstring   ~Hide.*Shadows~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~Hide.*Shadows:.*[1-9]*%perc%*~
                         SPRINT insertstring   ~Hide in Shadows: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF (~%param%~ STRING_EQUAL movesilmod || ((~%SOURCE_RES%~ STRING_EQUAL ~c2leat01~ ||  // hack to force
                                                                      ~%SOURCE_RES%~ STRING_EQUAL ~leat21~) &&   // description update
                                                                      ~%param%~ STRING_EQUAL weight)) BEGIN      // of Human Flesh
                         SET intopcode = 59
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET x = %returnval%
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~+%x%~
                         END
                         SPRINT searchstring   ~\(Stealth|Move Silently\)~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~\(Stealth|Move Silently\):.*[1-9]*%perc%*.*~
                         SPRINT insertstring   ~Move Silently: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL openlockmod BEGIN
                         SET intopcode = 90
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET x = %returnval%
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~+%x%~
                         END
                         SPRINT searchstring   ~Lock~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~\(Open.*ocks|Lock Picking\):.*[1-9]*%perc%*~
                         SPRINT insertstring   ~Open Locks: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL disarmtrapmod BEGIN
                         SET intopcode = 91
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET x = %returnval%
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~+%x%~
                         END
                         SPRINT searchstring   ~Find/Remove~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~Find/Remove.*raps:.*[1-9]*%perc%*~
                         SPRINT insertstring   ~Find/Remove Traps: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL pickpocketmod BEGIN
                         SET intopcode = 92
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET x = %returnval%
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~+%x%~
                         END
                         SPRINT searchstring   ~Pick Pockets~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~Pick Pockets:.*[1-9]*%perc%*~
                         SPRINT insertstring   ~Pick Pockets: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL spellfailmod BEGIN
                         SET intopcode = 60
                         SET intparam = 1
                         PATCH_INCLUDE ~sumfx.tpp~
                         SET x = %returnval%
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~+%x%~
                         END
                         SPRINT searchstring   ~Spell Failure~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~Spell Failure:.*[1-9]*%perc%*~
                         SPRINT insertstring   ~Mage Spell Failure: %x%%perc%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                END // if the param has changed
            END // foreach

            // collapse empty lines in the middle of the statistics block - or at least imm. above Armor Class / Weight
            SPRINT searchstring   ~%wnl%%wnl%Armor Class~
            SPRINT insertafter    ~gnurf~
            SPRINT replacestring  ~%wnl%%wnl%Armor Class~
            SPRINT insertstring   ~%wnl%Armor Class~
            PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            SPRINT searchstring   ~%wnl%%wnl%Weight~
            SPRINT insertafter    ~gnurf~
            SPRINT replacestring  ~%wnl%%wnl%Weight~
            SPRINT insertstring   ~%wnl%Weight~
            PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            PATCH_INCLUDE ~fullplate/descupd_magic.tpp~

            // batched updates ... where we have multiple values on one line.
            // elaborate tricks with QUOTE, REPLACE_EVALUATE and EVALUATE_BUFFER failed.
            PATCH_IF (resistanceheaderprinted = 1) BEGIN
                SPRINT searchstring   ~ vs. Slash/Crush/Pierce/Missile:~
                SPRINT insertafter    ~THISWILLNEVERMATCH~
                SPRINT replacestring  ~Slash/Crush/Pierce/Missile:%wnl%  0 / 0 / 0 / 0~
                SPRINT insertstring   ~Slash/Crush/Pierce/Missile:%wnl%  %slashrestotal%%perc% / %crushrestotal%%perc% / %piercerestotal%%perc% / %missilerestotal%%perc%~
                PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (slowheaderprinted = 1) BEGIN
                SPRINT searchstring   ~ Dex/Move Speed/Weapon Speed Factor:~
                SPRINT insertafter    ~THISWILLNEVERMATCH~
                SPRINT replacestring  ~ Dex/Move Speed/Weapon Speed Factor:%wnl%  0 / 0 / 0 ~
                SPRINT insertstring   ~ Dex/Move Speed/Weapon Speed Factor:%wnl%  %dexmodtotal% / %movemodtotal%%perc% / %wpnspeedtotal% ~
                PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END

            // some custom updates for less-than-accurate statements after mod install
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~c2keld01~) BEGIN // improved firecam full plate
                 SPRINT searchstring   ~Despite~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~ Despite being incredibly strong, the armor is almost weightless.~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~leat16~ || ~%SOURCE_RES%~ STRING_EQUAL ~dw#abyda~) BEGIN // orc leather, yellow dragon armor
                 SPRINT searchstring   ~Bonuses:~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~Bonuses: .*esistance to .*[mM]issile [aA]ttacks[%wnl%%lnl%%mnl%]+~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~usltr2a~ ) BEGIN // IWD: reinforced leather
                 SPRINT searchstring   ~Resistance Bonus:~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~Resistance Bonus: .*[%wnl%%lnl%%mnl%]+~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~usltr3a~ || ~%SOURCE_RES%~ STRING_EQUAL ~usltr4a~ ||
                      ~%SOURCE_RES%~ STRING_EQUAL ~usltr5a~ ) BEGIN // IWD: various studded leathers
                 SPRINT searchstring   ~Resistance Bonus~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~Resistance Bonus.*[%wnl%%lnl%%mnl%]+.*Resistance[%wnl%%lnl%%mnl%]+.*Resistance[%wnl%%lnl%%mnl%]+~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~s!plat04~) BEGIN // improved firecam full plate
                 SPRINT searchstring   ~Missile Damage~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~.*esistance to .*[mM]issile [dD]amage[%wnl%%lnl%%mnl%]+~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~plat22~) BEGIN // shuruppak's plate
                 SPRINT searchstring   ~[%wnl%%lnl%%mnl%][%wnl%%lnl%%mnl%]+.*fire resistance~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~[%wnl%%lnl%%mnl%][%wnl%%lnl%%mnl%]+.*fire resistance~
                 SPRINT insertstring   ~%wnl%+20%perc% fire resistance~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~chan02~ || ~%SOURCE_RES%~ STRING_EQUAL ~chan05~ ||
                      ~%SOURCE_RES%~ STRING_EQUAL ~j#spli06~) BEGIN // chain mail +1, splint mail +1, splint mail +2
                 SPRINT searchstring   ~bonus.* to their armor class~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~This suit of armor is enchanted, granting the wearer a.* bonus.* to their armor class.~
                 SPRINT insertstring   ~This suit of armor is enchanted, so it is lighter, easier to move in and more protective.~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~s!leat03~) BEGIN // corthala family armor +6
                 SPRINT searchstring   ~so that it grants a.* bonus to Valygar's armor class~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~so that it grants a.* bonus to Valygar's armor class~
                 SPRINT insertstring   ~so that it is lighter, easier to move in and more protective than before~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~rr#abih~) BEGIN // abishai hide
                 SPRINT searchstring   ~resistance~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~.*resistance to slashing, piercing, crushing and missile damage[%wnl%%lnl%%mnl%]+~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~mwararm~ || ~%SOURCE_RES%~ STRING_EQUAL ~armpen~) BEGIN // kill unneeded Special: clauses
                 SPRINT searchstring   ~Special~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~.*Special:.*[%wnl%%lnl%%mnl%]+~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~armpen~) BEGIN // armor of penance
                 SPRINT searchstring   ~Dexterity:~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~Dexterity.*[%wnl%%lnl%%mnl%]+~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~s!leat04~ || ~%SOURCE_RES%~ STRING_EQUAL ~s!leat05~) BEGIN // green leaves/red coral armor
                 SPRINT searchstring   ~resistance~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~.*resistance to physical damage.*[%wnl%%lnl%%mnl%]+~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~c2chan01~) BEGIN // incarnadine elven chain - no thieving penalties
                 SPRINT searchstring   ~Incarnadine~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~Stealth:.*[%wnl%%lnl%%mnl%]+~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
                 SPRINT replacestring  ~Lockpicking:.*[%wnl%%lnl%%mnl%]+~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
                 SPRINT replacestring  ~Find/Remove.*[%wnl%%lnl%%mnl%]+~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
                 SPRINT replacestring  ~Pick.*[%wnl%%lnl%%mnl%]+~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~shplate~) BEGIN // IWD: fix shadowed plate typo if noone else has
                 SPRINT searchstring   ~ corporeal ~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~ corporeal ~
                 SPRINT insertstring   ~ incorporeal ~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~glory~) BEGIN // glory of suffering
                 SPRINT searchstring   ~bonus to resist all Slashing, Piercing, Bludgeoning~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~  .*Missile attacks.~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~leatcm02~) BEGIN // green peace resistance
                 SPRINT searchstring   ~Special~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~.*Piercing Resistance.*[%wnl%%lnl%%mnl%]+~
                 SPRINT insertstring   ~~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
                 SPRINT replacestring  ~.*Slashing Resistance.*[%wnl%%lnl%%mnl%]+~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
                 SPRINT replacestring  ~.*Stealth.*[%wnl%%lnl%%mnl%]+~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END

        END // if not empty usename
    END // if fxnum > 0
    ELSE BEGIN // do potions here

    ///////////////////////////////
    // potion updates start here //
    ///////////////////////////////

        PATCH_IF NOT ( ~%usename%~ STRING_EQUAL ~~ ) BEGIN
            /* We have something to do, yay */
            READ_LONG  0x64 "abil_off"
            READ_SHORT 0x68 "abil_num"

            READ_LONG  0x6a "fx_start"

            SET accum_adj = 0
            SET duration = 0

            SET cumulative_or_set = 0

            FOR (index = 0 ; index < abil_num ; index = index + 1) BEGIN
              READ_SHORT ("%abil_off%" + 0x10 + ("%index%" * 56)) "level"
              READ_SHORT ("%abil_off%" + 0x1e + ("%index%" * 56)) "fx_num"
              READ_SHORT ("%abil_off%" + 0x20 + ("%index%" * 56)) "fx_off"

              PATCH_IF (accum_adj != 0) BEGIN // if adjustments to previous level, fix us up
                SET fx_off = fx_off + accum_adj
                WRITE_SHORT ("%abil_off%" + 0x20 + ("%index%" * 56)) %fx_off%
              END // if accum_adj

              FOR (index2 = fx_off ; index2 < (fx_off + fx_num) ; index2 = index2 + 1) BEGIN
                READ_SHORT %fx_start% + 0x30 * %index2% + 0     opcode
                READ_BYTE  %fx_start% + 0x30 * %index2% + 0x03  power
                READ_LONG  %fx_start% + 0x30 * %index2% + 0x04  param1
                READ_LONG  %fx_start% + 0x30 * %index2% + 0x08  param2
                READ_LONG  %fx_start% + 0x30 * %index2% + 0x0e  duration2

                PATCH_IF (duration2 > duration) BEGIN // so we don't copy a visual effect duration, for example
                    SET duration = duration2
                END

                PATCH_IF (
                    (%opcode% = 0)  ||  // any AC effects
                    (%opcode% = 15) ||  // dex modifiers
                    (%opcode% = 86) ||  // slashres
                    (%opcode% = 87) ||  // crushres
                    (%opcode% = 88) ||  // pierceres
                    (%opcode% = 89)     // missileres
                      ) BEGIN
                    DELETE_BYTES %fx_start% + 0x30 * %index2% + 0  0x30
                    SET fx_num = %fx_num% - 1
                    SET index2 = %index2% - 1
                    SET accum_adj = %accum_adj% - 1
                END
              END // for fx_num

            PATCH_FOR_EACH param IN ~dexmod~ ~movemod~ ~wpnspeedmod~ ~baseac~ ~slashac~ ~crushac~ ~pierceac~ ~missileac~
                                    ~slashres~ ~crushres~ ~pierceres~ ~missileres~
                                    ~spellfailmod~ ~pickpocketmod~ ~disarmtrapmod~ ~openlockmod~ ~movesilmod~ ~hidemod~ 
            BEGIN
                SET x = EVALUATE_BUFFER ~%%param%_%usename%%~
                PATCH_IF NOT ((x = 0 && NOT ~%param%~ STRING_EQUAL ~baseac~) || (x = 10 && ~%param%~ STRING_EQUAL ~baseac~)) BEGIN 
                    PATCH_IF ~%param%~ STRING_EQUAL dexmod BEGIN
                        SET opcode = 15
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL movemod BEGIN
                        SET opcode = 176
                        SET param1 = 0 - (x / 10)
                        SET param2 = 0
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL wpnspeedmod BEGIN
                        SET opcode = 190
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL baseac BEGIN
                        SET opcode = 0
                        SET param1 = x
                        SET param2 = 16
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL slashac BEGIN
                        SET opcode = 0
                        SET param1 = x
                        SET param2 = 8
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL crushac BEGIN
                        SET opcode = 0
                        SET param1 = x
                        SET param2 = 1
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL pierceac BEGIN
                        SET opcode = 0
                        SET param1 = x
                        SET param2 = 4
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL missileac BEGIN
                        SET opcode = 0
                        SET param1 = x
                        SET param2 = 2
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL slashres BEGIN
                        SET opcode = 86
                        SET param1 = x
                        SET param2 = %cumulative_or_set%
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF (~%param%~ STRING_EQUAL slashres) && cumulative_or_set == 1 BEGIN // immunity to further modification
                        SET opcode = 101
                        SET param1 = 0
                        SET param2 = 86
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL crushres BEGIN
                        SET opcode = 87
                        SET param1 = x
                        SET param2 = %cumulative_or_set%
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF (~%param%~ STRING_EQUAL crushres) && cumulative_or_set == 1 BEGIN // immunity to further modification
                        SET opcode = 101
                        SET param1 = 0
                        SET param2 = 87
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL pierceres BEGIN
                        SET opcode = 88
                        SET param1 = x
                        SET param2 = %cumulative_or_set%
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF (~%param%~ STRING_EQUAL pierceres) && cumulative_or_set == 1 BEGIN // immunity to further modification
                        SET opcode = 101
                        SET param1 = 0
                        SET param2 = 88
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL missileres BEGIN
                        SET opcode = 89
                        SET param1 = x
                        SET param2 = %cumulative_or_set%
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF (~%param%~ STRING_EQUAL missileres) && cumulative_or_set == 1 BEGIN // immunity to further modification
                        SET opcode = 101
                        SET param1 = 0
                        SET param2 = 89
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF (~%param%~ STRING_EQUAL hidemod  && (ENGINE_IS ~ToB~ || ENGINE_IS ~SoA~)) BEGIN
                        SET opcode = 275
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL movesilmod BEGIN
                        SET opcode = 59
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL openlockmod BEGIN
                        SET opcode = 90
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL disarmtrapmod BEGIN
                        SET opcode = 91
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL pickpocketmod BEGIN
                        SET opcode = 92
                        SET param1 = 0 - x
                        SET param2 = 0
                        PATCH_INCLUDE ~addpotfx.tpp~ END
                    PATCH_IF ~%param%~ STRING_EQUAL spellfailmod BEGIN
                        SET opcode = 60
                        SET param1 = x
                        SET param2 = 0
                        PATCH_INCLUDE ~addpotfx.tpp~ END

                END // if valid param
            END // for each param

            WRITE_SHORT ("%abil_off%" + 0x1e + ("%index%" * 56)) %fx_num%

            END // for abil_num

            // description updates, for potions

            READ_STRREF 0x50 uniddesc ELSE ~nope~
            READ_STRREF 0x54 iddesc ELSE ~nope~

            SET resistanceheaderprinted = 0
            SET slowheaderprinted = 0

            PATCH_FOR_EACH param IN ~dexmod~ ~movemod~ ~wpnspeedmod~ ~baseac~ ~slashac~ ~crushac~ ~pierceac~ ~missileac~
                                    ~slashres~ ~crushres~ ~pierceres~ ~missileres~ ~fireres~ ~coldres~
                                    ~spellfailmod~ ~pickpocketmod~ ~disarmtrapmod~ ~openlockmod~ ~movesilmod~ ~hidemod~ 
            BEGIN

                 SET x = EVALUATE_BUFFER ~%%param%_%usename%%~
                 PATCH_IF NOT ((x = 0 && NOT ~%param%~ STRING_EQUAL ~baseac~) || (x = 10 && ~%param%~ STRING_EQUAL ~baseac~)) BEGIN 
                     PATCH_IF ~%param%~ STRING_EQUAL baseac BEGIN
                         SPRINT searchstring   ~Armor Class:~
                         SPRINT insertafter    ~\(STATISTICS.*[%wnl%%lnl%%mnl%].*[%wnl%%lnl%%mnl%]\)~
                         SPRINT replacestring  ~Armor Class:[%tab% ]*.*-*[0-9]+[%tab% a-zA-Z0-9+.()]*~
                         SPRINT insertstring   ~Armor Class: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ((~%param%~ STRING_EQUAL slashres || ~%param%~ STRING_EQUAL crushres ||
                                ~%param%~ STRING_EQUAL pierceres || ~%param%~ STRING_EQUAL missileres)
                                && resistanceheaderprinted = 0) BEGIN
                         SPRINT searchstring   ~THISWILLNEVERMATCH~
                         SPRINT insertafter    ~\(STATISTICS.*[%wnl%%lnl%%mnl%].*[%wnl%%lnl%%mnl%]\)~
                         SPRINT replacestring  ~~
                         SPRINT insertstring   ~Protection:%wnl% vs. Slash/Crush/Pierce/Missile:%wnl%  0 / 0 / 0 / 0~
                         SET resistanceheaderprinted = 1
                         SET slashrestotal = 0
                         SET crushrestotal = 0
                         SET piercerestotal = 0
                         SET missilerestotal = 0
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL slashres BEGIN
                         SET slashrestotal = x
                         PATCH_IF cumulative_or_set == 0 BEGIN
                           SPRINT slashrestotal ~+%slashrestotal%~
                           END
                         END

                     PATCH_IF ~%param%~ STRING_EQUAL crushres BEGIN
                         SET crushrestotal = x
                         PATCH_IF cumulative_or_set == 0 BEGIN
                           SPRINT crushrestotal ~+%crushrestotal%~
                           END
                         END

                     PATCH_IF ~%param%~ STRING_EQUAL pierceres BEGIN
                         SET piercerestotal = x
                         PATCH_IF cumulative_or_set == 0 BEGIN
                           SPRINT piercerestotal ~+%piercerestotal%~
                           END
                         END

                     PATCH_IF ~%param%~ STRING_EQUAL missileres BEGIN
                         SET missilerestotal = x
                         PATCH_IF cumulative_or_set == 0 BEGIN
                           SPRINT missilerestotal ~+%missilerestotal%~
                           END
                         END

                     PATCH_IF ((~%param%~ STRING_EQUAL dexmod || ~%param%~ STRING_EQUAL movemod ||
                                ~%param%~ STRING_EQUAL wpnspeedmod)
                                && slowheaderprinted = 0) BEGIN
                         SPRINT searchstring   ~THISWILLNEVERMATCH~
                         SPRINT insertafter    ~\(STATISTICS.*[%wnl%%lnl%%mnl%].*[%wnl%%lnl%%mnl%]\)~
                         SPRINT replacestring  ~~
                         SPRINT insertstring   ~Slowdown:%wnl% Dex/Move Speed/Weapon Speed Factor:%wnl%  0 / 0 / 0 ~
                         SET slowheaderprinted = 1
                         SET dexmodtotal = 0
                         SET movemodtotal = 0
                         SET wpnspeedtotal = 0
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL dexmod BEGIN // kill various DEX lines
                         SPRINT searchstring   ~Dexterity~
                         SPRINT insertafter    ~\(STATISTICS\)~
                         SPRINT replacestring  ~Dexterity:.*%wnl%~
                         SPRINT insertstring   ~~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
                         SET dexmodtotal = 0 - x
                         END

                     PATCH_IF ~%param%~ STRING_EQUAL movemod BEGIN
                         SET movemodtotal = (0 - x)
                         END

                     PATCH_IF ~%param%~ STRING_EQUAL wpnspeedmod BEGIN
                         SET wpnspeedtotal = x
                         PATCH_IF (wpnspeedtotal > 0) BEGIN
                           SPRINT wpnspeedtotal ~+%wpnspeedtotal%~
                         END
                         END

                     PATCH_IF (~%param%~ STRING_EQUAL hidemod  && (ENGINE_IS ~ToB~ || ENGINE_IS ~SoA~)) BEGIN
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~-%x%~
                         END
                         SPRINT searchstring   ~Hide.*Shadows~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~Hide.*Shadows:.*[1-9]*%perc%*~
                         SPRINT insertstring   ~Hide in Shadows: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF (~%param%~ STRING_EQUAL movesilmod) BEGIN
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~-%x%~
                         END
                         SPRINT searchstring   ~\(Stealth|Move Silently\)~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~\(Stealth|Move Silently\):.*[1-9]*%perc%*.*~
                         SPRINT insertstring   ~Move Silently: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL openlockmod BEGIN
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~-%x%~
                         END
                         SPRINT searchstring   ~Lock~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~\(Open.*ocks|Lock Picking\):.*[1-9]*%perc%*~
                         SPRINT insertstring   ~Open Locks: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL disarmtrapmod BEGIN
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~-%x%~
                         END
                         SPRINT searchstring   ~Find/Remove~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~Find/Remove.*raps:.*[1-9]*%perc%*~
                         SPRINT insertstring   ~Find/Remove Traps: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL pickpocketmod BEGIN
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~-%x%~
                         END
                         SPRINT searchstring   ~Pick Pockets~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~Pick Pockets:.*[1-9]*%perc%*~
                         SPRINT insertstring   ~Pick Pockets: %x%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                     PATCH_IF ~%param%~ STRING_EQUAL spellfailmod BEGIN
                         PATCH_IF (x > 0) BEGIN
                           SPRINT x ~+%x%~
                         END
                         SPRINT searchstring   ~Spell Failure~
                         SPRINT insertafter    ~\(Armor Class:[%tab% ]*-*[0-9]+[%tab% a-zA-Z0-9+.()]*[%wnl%%lnl%%mnl%]+\)~
                         SPRINT replacestring  ~Spell Failure:.*[1-9]*%perc%*~
                         SPRINT insertstring   ~Mage Spell Failure: %x%%perc%~
                         PATCH_INCLUDE ~fullplate/descupd_magic.tpp~ END

                END // if the param has changed
            END // foreach

            // batched updates ... where we have multiple values on one line.
            // elaborate tricks with QUOTE, REPLACE_EVALUATE and EVALUATE_BUFFER failed.
            PATCH_IF (resistanceheaderprinted = 1) BEGIN
                SPRINT searchstring   ~ vs. Slash/Crush/Pierce/Missile:~
                SPRINT insertafter    ~THISWILLNEVERMATCH~
                SPRINT replacestring  ~Slash/Crush/Pierce/Missile:%wnl%  0 / 0 / 0 / 0~
                SPRINT insertstring   ~Slash/Crush/Pierce/Missile:%wnl%  %slashrestotal%%perc% / %crushrestotal%%perc% / %piercerestotal%%perc% / %missilerestotal%%perc%~
                PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (slowheaderprinted = 1) BEGIN
                SPRINT searchstring   ~ Dex/Move Speed/Weapon Speed Factor:~
                SPRINT insertafter    ~THISWILLNEVERMATCH~
                SPRINT replacestring  ~ Dex/Move Speed/Weapon Speed Factor:%wnl%  0 / 0 / 0 ~
                SPRINT insertstring   ~ Dex/Move Speed/Weapon Speed Factor:%wnl%  %dexmodtotal% / %movemodtotal%%perc% / %wpnspeedtotal% ~
                PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            // some custom updates for less-than-accurate statements after mod install
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~potn24~) BEGIN // potion of defense
                 SPRINT searchstring   ~Armor Class~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~Armor Class: set to 0~
                 SPRINT insertstring   ~Armor Class: +%crushac_potn24% bonus vs. all~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
                 SPRINT searchstring   ~improves the armor class of the imbiber.~
                 SPRINT insertafter    ~THISWILLNEVERMATCH~
                 SPRINT replacestring  ~improves the armor class of the imbiber.~
                 SPRINT insertstring   ~improves your understanding of combat and helps you dodge, weave and avoid attacks.~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END
            PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~potn46~) BEGIN // potion of stone form
                 SPRINT searchstring   ~THISWILLNEVERMATCH~
                 SPRINT insertafter    ~\(STATISTICS.*[%wnl%%lnl%%mnl%].*[%wnl%%lnl%%mnl%]\)~
                 SPRINT replacestring  ~~
                 SPRINT insertstring   ~WARNING: dropping below 1 Dexterity will turn you to stone and kill you.%wnl%~
                 PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
            END

        END // if usename
    END // if fxnum == 0
  END
  BUT_ONLY_IF_IT_CHANGES

PRINT ~Reworking spells and updating descriptions...~

//////////////////////////////
// spell updates start here //
//////////////////////////////
//
// perhaps todo: Auril's Bane:
//  SPPR425 Earthen Skin (described as Better Barkskin, actual effect Stoneskin)
//  SPPR724 Aura of Protection (base ac 1, whole party, two hours)

COPY_EXISTING_REGEXP GLOB ~^.+\.spl$~ ~override~

  PATCH_IF (SOURCE_SIZE < 0x72) BEGIN
    // PATCH_PRINT "%SOURCE_FILE%: Invalid, below minimum size"
  END ELSE BEGIN

    SPRINT usename ~~
    SET enchantment = 0
    TO_LOWER SOURCE_RES
    SET cumulative_or_set = 0
    PATCH_IF ("%SOURCE_RES%" STRING_EQUAL ~spwi102~ ||
              "%SOURCE_RES%" STRING_EQUAL ~spwi317~ ||
              "%SOURCE_RES%" STRING_EQUAL ~spwi414~ ||
              "%SOURCE_RES%" STRING_EQUAL ~sppr202~) BEGIN
        SET cumulative_or_set = 1 // flat value set, like normal armour
    END

    // armor type defined for the spell in classifications.txt?
    SPRINT classdefined $class(~%SOURCE_RES%~)
    PATCH_IF NOT (~%classdefined%~ STRING_CONTAINS_REGEXP ~class~ == 0) BEGIN
        SPRINT tempname ~%classdefined%%enchantment%~
        
        // stats listed in thebiglist.txt for the generic armor type?
        SPRINT classenchant $weight(~%tempname%~)
        PATCH_IF NOT (~%classenchant%~ STRING_CONTAINS_REGEXP ~weight~ == 0) BEGIN
            SPRINT usename ~%tempname%~
        END
    END

    PATCH_IF NOT ( ~%usename%~ STRING_EQUAL ~~ ) BEGIN
        // adjustments listed in thebiglist.txt for the specific spell?
        SPRINT specialcase $baseac(~%SOURCE_RES%~)
        PATCH_IF NOT (~%specialcase%~ STRING_CONTAINS_REGEXP ~baseac~ == 0) BEGIN
            SET $baseac(~%SOURCE_RES%~)         = $baseac(~%SOURCE_RES%~) + $baseac(~%usename%~)
            SET $slashac(~%SOURCE_RES%~)        = $slashac(~%SOURCE_RES%~) + $slashac(~%usename%~)
            SET $crushac(~%SOURCE_RES%~)        = $crushac(~%SOURCE_RES%~) + $crushac(~%usename%~)
            SET $pierceac(~%SOURCE_RES%~)       = $pierceac(~%SOURCE_RES%~) + $pierceac(~%usename%~)
            SET $missileac(~%SOURCE_RES%~)      = $missileac(~%SOURCE_RES%~) + $missileac(~%usename%~)
            SET $slashres(~%SOURCE_RES%~)       = $slashres(~%SOURCE_RES%~) + $slashres(~%usename%~)
            SET $crushres(~%SOURCE_RES%~)       = $crushres(~%SOURCE_RES%~) + $crushres(~%usename%~)
            SET $pierceres(~%SOURCE_RES%~)      = $pierceres(~%SOURCE_RES%~) + $pierceres(~%usename%~)
            SET $missileres(~%SOURCE_RES%~)     = $missileres(~%SOURCE_RES%~) + $missileres(~%usename%~)

            FOR (x=2; (x < 32); x+=1) BEGIN
                SPRINT specialcase $baseac(~%SOURCE_RES%-%x%~)
                PATCH_IF NOT (~%specialcase%~ STRING_CONTAINS_REGEXP ~baseac~ == 0) BEGIN
                    SET $baseac(~%SOURCE_RES%-%x%~)         = $baseac(~%SOURCE_RES%-%x%~) + $baseac(~%usename%~)
                    SET $slashac(~%SOURCE_RES%-%x%~)        = $slashac(~%SOURCE_RES%-%x%~) + $slashac(~%usename%~)
                    SET $crushac(~%SOURCE_RES%-%x%~)        = $crushac(~%SOURCE_RES%-%x%~) + $crushac(~%usename%~)
                    SET $pierceac(~%SOURCE_RES%-%x%~)       = $pierceac(~%SOURCE_RES%-%x%~) + $pierceac(~%usename%~)
                    SET $missileac(~%SOURCE_RES%-%x%~)      = $missileac(~%SOURCE_RES%-%x%~) + $missileac(~%usename%~)
                    SET $slashres(~%SOURCE_RES%-%x%~)       = $slashres(~%SOURCE_RES%-%x%~) + $slashres(~%usename%~)
                    SET $crushres(~%SOURCE_RES%-%x%~)       = $crushres(~%SOURCE_RES%-%x%~) + $crushres(~%usename%~)
                    SET $pierceres(~%SOURCE_RES%-%x%~)      = $pierceres(~%SOURCE_RES%-%x%~) + $pierceres(~%usename%~)
                    SET $missileres(~%SOURCE_RES%-%x%~)     = $missileres(~%SOURCE_RES%-%x%~) + $missileres(~%usename%~)
                END // if baseac
            END // for

            SPRINT usename ~%SOURCE_RES%~
        END // if baseac
    END // if usename

    PATCH_IF NOT ( ~%usename%~ STRING_EQUAL ~~ ) BEGIN
        /* We have something to do, yay */
        READ_LONG  0x64 "abil_off"
        READ_SHORT 0x68 "abil_num"

        READ_LONG  0x6a "fx_start"
        
        SET accum_adj = 0
        SET duration = 0

        FOR (index = 0 ; index < abil_num ; index = index + 1) BEGIN
          READ_SHORT ("%abil_off%" + 0x10 + ("%index%" * 40)) "level"
          READ_SHORT ("%abil_off%" + 0x1e + ("%index%" * 40)) "fx_num"
          READ_SHORT ("%abil_off%" + 0x20 + ("%index%" * 40)) "fx_off"
          
          PATCH_IF (accum_adj != 0) BEGIN // if adjustments to previous level, fix us up
            SET fx_off = fx_off + accum_adj
            WRITE_SHORT ("%abil_off%" + 0x20 + ("%index%" * 40)) %fx_off%
          END // if accum_adj

          FOR (index2 = fx_off ; index2 < (fx_off + fx_num) ; index2 = index2 + 1) BEGIN
            READ_SHORT %fx_start% + 0x30 * %index2% + 0     opcode
            READ_BYTE  %fx_start% + 0x30 * %index2% + 0x03  power
            READ_LONG  %fx_start% + 0x30 * %index2% + 0x04  param1
            READ_LONG  %fx_start% + 0x30 * %index2% + 0x08  param2
            READ_LONG  %fx_start% + 0x30 * %index2% + 0x0e  duration2
            
            PATCH_IF (duration2 > duration) BEGIN // so we don't copy a visual effect duration, for example
                SET duration = duration2
            END
            
            PATCH_IF (
                (%opcode% = 0)  ||  // any AC effects
                (%opcode% = 86) ||  // slashres
                (%opcode% = 87) ||  // crushres
                (%opcode% = 88) ||  // pierceres
                (%opcode% = 89)     // missileres
                  ) BEGIN
                DELETE_BYTES %fx_start% + 0x30 * %index2% + 0  0x30
                SET fx_num = %fx_num% - 1
                SET index2 = %index2% - 1
                SET accum_adj = %accum_adj% - 1
            END
          END // for fx_num

        PATCH_FOR_EACH param IN ~baseac~ ~slashac~ ~crushac~ ~pierceac~ ~missileac~
                                ~slashres~ ~crushres~ ~pierceres~ ~missileres~
        BEGIN
            SET x = EVALUATE_BUFFER ~%%param%_%usename%%~
            SPRINT y EVALUATE_BUFFER ~%%param%_%usename%-%level%%~
            PATCH_IF NOT (~%y%~ STRING_CONTAINS_REGEXP ~%param%~ == 0) BEGIN // if y is valid, override x
                SET x = %y%
            END

            PATCH_IF NOT ((x = 0 && NOT ~%param%~ STRING_EQUAL ~baseac~) || (x = 10 && ~%param%~ STRING_EQUAL ~baseac~)) BEGIN 
                PATCH_IF ~%param%~ STRING_EQUAL baseac BEGIN
                    SET opcode = 0
                    SET param1 = x
                    SET param2 = 16
                    PATCH_INCLUDE ~addsplfx.tpp~ END
                PATCH_IF ~%param%~ STRING_EQUAL slashac BEGIN
                    SET opcode = 0
                    SET param1 = x
                    SET param2 = 8
                    PATCH_INCLUDE ~addsplfx.tpp~ END
                PATCH_IF ~%param%~ STRING_EQUAL crushac BEGIN
                    SET opcode = 0
                    SET param1 = x
                    SET param2 = 1
                    PATCH_INCLUDE ~addsplfx.tpp~ END
                PATCH_IF ~%param%~ STRING_EQUAL pierceac BEGIN
                    SET opcode = 0
                    SET param1 = x
                    SET param2 = 4
                    PATCH_INCLUDE ~addsplfx.tpp~ END
                PATCH_IF ~%param%~ STRING_EQUAL missileac BEGIN
                    SET opcode = 0
                    SET param1 = x
                    SET param2 = 2
                    PATCH_INCLUDE ~addsplfx.tpp~ END
                PATCH_IF ~%param%~ STRING_EQUAL slashres BEGIN
                    SET opcode = 86
                    SET param1 = x
                    SET param2 = %cumulative_or_set%
                    PATCH_INCLUDE ~addsplfx.tpp~ END
                PATCH_IF ~%param%~ STRING_EQUAL crushres BEGIN
                    SET opcode = 87
                    SET param1 = x
                    SET param2 = %cumulative_or_set%
                    PATCH_INCLUDE ~addsplfx.tpp~ END
                PATCH_IF ~%param%~ STRING_EQUAL pierceres BEGIN
                    SET opcode = 88
                    SET param1 = x
                    SET param2 = %cumulative_or_set%
                    PATCH_INCLUDE ~addsplfx.tpp~ END
                PATCH_IF ~%param%~ STRING_EQUAL missileres BEGIN
                    SET opcode = 89
                    SET param1 = x
                    SET param2 = %cumulative_or_set%
                    PATCH_INCLUDE ~addsplfx.tpp~ END
                    
            END // if valid param
        END // for each param

        WRITE_SHORT ("%abil_off%" + 0x1e + ("%index%" * 40)) %fx_num%

        END // for abil_num

        // description updates, mostly hand-coded for spells
        READ_STRREF 0x50 uniddesc ELSE ~nope~
        READ_STRREF 0x54 iddesc ELSE ~nope~

        PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~spwi102~) BEGIN // Armor spell
             SPRINT searchstring   ~scale mail armor (AC 6)~
             SPRINT insertafter    ~THISWILLNEVERMATCH~
             SPRINT replacestring  ~(AC 6)~
             SPRINT insertstring   ~(AC %baseac_scale0%, Protection vs. S/C/P/M: %slashres_scale0%%perc% / %crushres_scale0%%perc% / %pierceres_scale0%%perc% / %missileres_scale0%%perc%)~
             PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
        END
        PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~spwi317~) BEGIN // Ghost Armor spell
             SPRINT searchstring   ~field plate armor (AC 2)~
             SPRINT insertafter    ~THISWILLNEVERMATCH~
             SPRINT replacestring  ~(AC 2)~
             SPRINT insertstring   ~(AC %baseac_fieldp0%, Protection vs. S/C/P/M: %slashres_fieldp0%%perc% / %crushres_fieldp0%%perc% / %pierceres_fieldp0%%perc% / %missileres_fieldp0%%perc%)~
             PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
             // IWD variant - touch range and a bit weaker, bg2 is caster-only
             SPRINT searchstring   ~plate armor (AC 3)~
             SPRINT insertafter    ~THISWILLNEVERMATCH~
             SPRINT replacestring  ~(AC 3)~
             SPRINT insertstring   ~(AC %baseac_plate0%, Protection vs. S/C/P/M: %slashres_plate0%%perc% / %crushres_plate0%%perc% / %pierceres_plate0%%perc% / %missileres_plate0%%perc%)~
             PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
        END
        PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~spwi414~) BEGIN // Spirit Armor spell
             SPRINT searchstring   ~1, as if he was wearing full plate~
             SPRINT insertafter    ~THISWILLNEVERMATCH~
             SPRINT replacestring  ~While in effect the AC (armor class) of the recipient will be 1, as if he was wearing full plate.~
             SPRINT insertstring   ~While in effect the recipient will be protected as if he was wearing full plate armor. (AC %baseac_fullp0%, Protection vs. S/C/P/M: %slashres_fullp0%%perc% / %crushres_fullp0%%perc% / %pierceres_fullp0%%perc% / %missileres_fullp0%%perc%)~
             PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
             // IWD variant
             SPRINT searchstring   ~1, as if he was wearing plate mail~
             SPRINT replacestring  ~While in effect the AC (armor class) of the recipient will be 1, as if he was wearing plate mail.~
             PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
        END
        PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~sppr111~ || ~%SOURCE_RES%~ STRING_EQUAL ~dgfaith~) BEGIN // Armor of Faith spell
             SPRINT searchstring   ~At first level, the protection is 5~
             SPRINT insertafter    ~THISWILLNEVERMATCH~
             SPRINT replacestring  ~At first level, the protection is 5%perc%, and every five levels of the caster improves this by another 5%perc%.~
             SPRINT insertstring   ~At first level, the protection is 5%perc% versus magic and %slashres_sppr111%%perc% versus physical attacks, and every five levels of the caster improves this by another 5%perc% and %slashres_sppr111%%perc%, respectively.~
             PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
             SPRINT searchstring   ~A 20th level priest would have~
             SPRINT insertafter    ~THISWILLNEVERMATCH~
             SPRINT replacestring  ~A 20th level priest would have 25%perc% of her damage 'absorbed'~
             SPRINT insertstring   ~A 20th level priest would have 25%perc% / %slashres_sppr111-20%%perc% of her damage 'absorbed'~
             PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
        END
        PATCH_IF (~%SOURCE_RES%~ STRING_EQUAL ~sppr202~) BEGIN // Barkskin spell
             SPRINT searchstring   ~increasing its base Armor Class to 6, plus 1 bonus point for every four levels of the priest (AC 5 at 4th level, AC 4 at 8th level, and so forth).~
             SPRINT insertafter    ~THISWILLNEVERMATCH~
             SPRINT replacestring  ~increasing its base Armor Class to 6, plus 1 bonus point for every four levels of the priest (AC 5 at 4th level, AC 4 at 8th level, and so forth).~
             SPRINT insertstring   ~protecting it as a scale mail armor (AC %baseac_sppr202%, Protection vs. S/C/P/M: %slashres_sppr202%%perc% / %crushres_sppr202%%perc% / %pierceres_sppr202%%perc% / %missileres_sppr202%%perc%) of +1 enchantment for every four levels of the priest (+1 at 4th level, +2 at 8th level, and so forth).~
             PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
             // IWD variant
             SPRINT searchstring   ~increasing its base Armor Class to AC 6, plus 1 AC for every four levels of the priest: Armor Class 5 at 4th level, Armor Class 4 at 8th, and so on.~
             SPRINT replacestring  ~increasing its base Armor Class to AC 6, plus 1 AC for every four levels of the priest: Armor Class 5 at 4th level, Armor Class 4 at 8th, and so on.~
             PATCH_INCLUDE ~fullplate/descupd_magic.tpp~
        END
        
        // update scroll descriptions to match the modified spell
        READ_STRREF 0x08 spellname
        READ_LONG 0x50 spelldescref
        INNER_ACTION BEGIN
          COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
            PATCH_IF (SOURCE_SIZE < 0x72) BEGIN
              // PATCH_PRINT "%SOURCE_FILE%: Invalid, below minimum size"
            END ELSE BEGIN
              READ_STRREF 0x0c scrollname
              PATCH_IF (~%spellname%~ STRING_EQUAL ~%scrollname%~) BEGIN
                WRITE_LONG 0x54 %spelldescref%
              END
            END
          BUT_ONLY_IF_IT_CHANGES
        END // inner_action
    END // if usename
  END // 0-byte-file guard
  BUT_ONLY_IF_IT_CHANGES

///////////////////////////////////////
// update unid'ed armor descriptions //
///////////////////////////////////////

PRINT ~Fixing up unidentified armour descriptions...~
COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~

  PATCH_IF (SOURCE_SIZE < 0x72) BEGIN
    // PATCH_PRINT "%SOURCE_FILE%: Invalid, below minimum size"
  END ELSE BEGIN

    READ_LONG 0x60 enchantment
    READ_BYTE 0x1c itemtype

    SPRINT usename ~~
    TO_LOWER SOURCE_RES

    PATCH_IF (itemtype == 0x02 && enchantment > 0) BEGIN
      // armor type defined for the item in classifications.txt?
      SPRINT classdefined $class(~%SOURCE_RES%~)
      PATCH_IF NOT (~%classdefined%~ STRING_CONTAINS_REGEXP ~class~ == 0) BEGIN
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~leather~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~leat01.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~studded~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~leat04.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~hide~ BEGIN
          INNER_ACTION BEGIN
            ACTION_IF FILE_EXISTS_IN_GAME ~leat10.itm~ BEGIN // if hide-type armor added to, say, IWD, that doesn't have leat10.itm
              COPY_EXISTING ~leat10.itm~ ~override~
                READ_LONG 0x50 uniddescref
              BUT_ONLY_IF_IT_CHANGES
            END
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~elvenc~ BEGIN
          INNER_ACTION BEGIN
            ACTION_IF FILE_EXISTS_IN_GAME ~chan12.itm~ BEGIN
              COPY_EXISTING ~chan12.itm~ ~override~
                READ_LONG 0x50 uniddescref
              BUT_ONLY_IF_IT_CHANGES
            END ELSE BEGIN
              COPY_EXISTING ~chan01.itm~ ~override~ // IWD has elven chain, but uses normal chain for unid'ed descriptions
                READ_LONG 0x50 uniddescref
              BUT_ONLY_IF_IT_CHANGES
            END
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~scale~ && FILE_EXISTS_IN_GAME ~scal01.itm~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~scal01.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~chain~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~chan01.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~adamc~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~chan01.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~banded~ && FILE_EXISTS_IN_GAME ~band01.itm~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~band01.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~splint~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~chan04.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~plate~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~plat01.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~fieldp~ && FILE_EXISTS_IN_GAME ~flat01.itm~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~flat01.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~mfieldp~ && FILE_EXISTS_IN_GAME ~flat01.itm~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~flat01.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~mfieldp~ && NOT FILE_EXISTS_IN_GAME ~flat01.itm~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~plat04.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
        PATCH_IF ~%classdefined%~ STRING_EQUAL ~fullp~ BEGIN
          INNER_ACTION BEGIN
            COPY_EXISTING ~plat04.itm~ ~override~
              READ_LONG 0x50 uniddescref
            BUT_ONLY_IF_IT_CHANGES
          END
          WRITE_LONG 0x50 uniddescref
        END
      END
    END
  END
  BUT_ONLY_IF_IT_CHANGES
    
//////////////////////
// do shield things //
//////////////////////

PRINT ~Removing spellcasting/thieving restrictions from shields~

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~

  PATCH_IF (SOURCE_SIZE < 0x72) BEGIN
    // PATCH_PRINT "%SOURCE_FILE%: Invalid, below minimum size"
  END ELSE BEGIN

    READ_ASCII 0x22 anim (2)

    PATCH_IF (("%anim%" STRING_EQUAL ~D1~) ||
              ("%anim%" STRING_EQUAL ~D2~) ||
              ("%anim%" STRING_EQUAL ~D3~) ||
              ("%anim%" STRING_EQUAL ~D4~)) BEGIN

      READ_SHORT 0x70 fxnum
      READ_LONG 0x6a fxoff

      FOR (x=0; (x < %fxnum%); x+=1) BEGIN
          READ_SHORT %fxoff% + 0x30 * %x% + 0     opcode
          READ_LONG  %fxoff% + 0x30 * %x% + 0x04  param1
          READ_LONG  %fxoff% + 0x30 * %x% + 0x08  param2

          PATCH_IF (
              (%opcode% = 145 && %param2% = 0) ||                     // wizard spell disable
              (%opcode% = 144 && (%param2% = 0 || %param2% = 1)) ||   // stealth/thieving disable
              (%opcode% = 59 && %param1% < 0) ||                      // move silently penalty (but keep bonuses)
              (%opcode% = 275 && %param1% < 0) ||                     // hide in shadows penalty
              (%opcode% = 90 && %param1% < 0) ||                      // open lock penalty
              (%opcode% = 91 && %param1% < 0) ||                      // find trap penalty
              (%opcode% = 92 && %param1% < 0) ||                      // pickpocket penalty
              (%opcode% = 126 && %param1% < 0 && %param2% = 0)        // movement slowdown
                ) BEGIN
              PATCH_INCLUDE ~delitmfx.tpp~                            // kill them.
          END
      END

      WRITE_SHORT 0x70 %fxnum%
    END
  END
  BUT_ONLY_IF_IT_CHANGES



///////////////////////////////////
// add resistance limiter cutspy //
// whee, it works, perfectly!    //
///////////////////////////////////

// Need variants for BG1/PST
ACTION_IF ( ENGINE_IS ~ToB~ || ENGINE_IS ~SoA~ ) BEGIN

PRINT ~Adding damage resistance limiter... (physical 90, magical 100)~

<<<<<<<< baldur_res.baf
IF
    Global("ekresspybeenhere","GLOBAL",0)
    OR(54)
        CheckStatGT(Player1,90,RESISTSLASHING)
        CheckStatGT(Player2,90,RESISTSLASHING)
        CheckStatGT(Player3,90,RESISTSLASHING)
        CheckStatGT(Player4,90,RESISTSLASHING)
        CheckStatGT(Player5,90,RESISTSLASHING)
        CheckStatGT(Player6,90,RESISTSLASHING)
        CheckStatGT(Player1,90,RESISTCRUSHING)
        CheckStatGT(Player2,90,RESISTCRUSHING)
        CheckStatGT(Player3,90,RESISTCRUSHING)
        CheckStatGT(Player4,90,RESISTCRUSHING)
        CheckStatGT(Player5,90,RESISTCRUSHING)
        CheckStatGT(Player6,90,RESISTCRUSHING)
        CheckStatGT(Player1,90,RESISTPIERCING)
        CheckStatGT(Player2,90,RESISTPIERCING)
        CheckStatGT(Player3,90,RESISTPIERCING)
        CheckStatGT(Player4,90,RESISTPIERCING)
        CheckStatGT(Player5,90,RESISTPIERCING)
        CheckStatGT(Player6,90,RESISTPIERCING)
        CheckStatGT(Player1,90,RESISTMISSILE)
        CheckStatGT(Player2,90,RESISTMISSILE)
        CheckStatGT(Player3,90,RESISTMISSILE)
        CheckStatGT(Player4,90,RESISTMISSILE)
        CheckStatGT(Player5,90,RESISTMISSILE)
        CheckStatGT(Player6,90,RESISTMISSILE)
        CheckStatGT(Player1,100,RESISTFIRE)
        CheckStatGT(Player2,100,RESISTFIRE)
        CheckStatGT(Player3,100,RESISTFIRE)
        CheckStatGT(Player4,100,RESISTFIRE)
        CheckStatGT(Player5,100,RESISTFIRE)
        CheckStatGT(Player6,100,RESISTFIRE)
        CheckStatGT(Player1,100,RESISTCOLD)
        CheckStatGT(Player2,100,RESISTCOLD)
        CheckStatGT(Player3,100,RESISTCOLD)
        CheckStatGT(Player4,100,RESISTCOLD)
        CheckStatGT(Player5,100,RESISTCOLD)
        CheckStatGT(Player6,100,RESISTCOLD)
        CheckStatGT(Player1,100,RESISTELECTRICITY)
        CheckStatGT(Player2,100,RESISTELECTRICITY)
        CheckStatGT(Player3,100,RESISTELECTRICITY)
        CheckStatGT(Player4,100,RESISTELECTRICITY)
        CheckStatGT(Player5,100,RESISTELECTRICITY)
        CheckStatGT(Player6,100,RESISTELECTRICITY)
        CheckStatGT(Player1,100,RESISTACID)
        CheckStatGT(Player2,100,RESISTACID)
        CheckStatGT(Player3,100,RESISTACID)
        CheckStatGT(Player4,100,RESISTACID)
        CheckStatGT(Player5,100,RESISTACID)
        CheckStatGT(Player6,100,RESISTACID)
        CheckStatGT(Player1,100,MAGICDAMAGERESISTANCE)
        CheckStatGT(Player2,100,MAGICDAMAGERESISTANCE)
        CheckStatGT(Player3,100,MAGICDAMAGERESISTANCE)
        CheckStatGT(Player4,100,MAGICDAMAGERESISTANCE)
        CheckStatGT(Player5,100,MAGICDAMAGERESISTANCE)
        CheckStatGT(Player6,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        CreateCreatureObject("ekresspy",Player1,1,0,0)
        SetGlobal("ekresspybeenhere","GLOBAL",1)
        Continue()
END

IF
    GlobalGT("ekresspybeenhere","GLOBAL",0)
    !InActiveArea("ekresspy")
THEN
    RESPONSE #100
        MoveGlobalObjectOffscreen("ekresspy",Player1)
END

>>>>>>>>

<<<<<<<< ekresres.baf
IF
    Global("ekresspybeenhere","GLOBAL",1)
THEN
    RESPONSE #100
        MakeGlobal()
        SetGlobal("ekresspybeenhere","GLOBAL",2)
END

IF
    CheckStatGT(Player1,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player6)
        Continue()
END

IF
    True()
THEN
    RESPONSE #100
        NoAction()
END
>>>>>>>>

COPY ~fullplate/ekresspy.cre~ ~override~
COPY ~fullplate/ekslash.spl~ ~override~
COPY ~fullplate/ekcrush.spl~ ~override~
COPY ~fullplate/ekpierc.spl~ ~override~
COPY ~fullplate/ekmiss.spl~ ~override~
COPY ~fullplate/ekfire.spl~ ~override~
COPY ~fullplate/ekcold.spl~ ~override~
COPY ~fullplate/ekacid.spl~ ~override~
COPY ~fullplate/ekelec.spl~ ~override~
COPY ~fullplate/ekmdam.spl~ ~override~

// ApplySpellRES() isn't defined in a stock SoA install
APPEND ~action.ids~ ~160 ApplySpellRES(S:RES*,O:Target)~
 UNLESS ~ApplySpellRES(S:RES\*,O:Target)~
// MakeGlobal() isn't defined in a stock SoA install
APPEND ~action.ids~ ~336 MakeGlobal()~
 UNLESS ~MakeGlobal()~

COMPILE ~ekresres.baf~

EXTEND_BOTTOM baldur.bcs baldur_res.baf

ACTION_IF FILE_EXISTS_IN_GAME ~baldur25.bcs~ BEGIN
  EXTEND_BOTTOM baldur25.bcs baldur_res.baf
END

END // ACTION_IF BG2 engine


// Crude icewind dale variant
ACTION_IF ( ENGINE_IS ~IWD~ || ENGINE_IS ~HOW~ || ENGINE_IS ~TOTLM~ ) BEGIN

PRINT ~Adding damage resistance limiter... (physical 90, magical 100)~

<<<<<<<< iwresres.baf
IF
    CheckStatGT(Player1,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,90,RESISTSLASHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKSLASH", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,90,RESISTCRUSHING)
THEN
    RESPONSE #100
        ApplySpellRES("EKCRUSH", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,90,RESISTPIERCING)
THEN
    RESPONSE #100
        ApplySpellRES("EKPIERC", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,90,RESISTMISSILE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMISS", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,100,RESISTFIRE)
THEN
    RESPONSE #100
        ApplySpellRES("EKFIRE", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,100,RESISTCOLD)
THEN
    RESPONSE #100
        ApplySpellRES("EKCOLD", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,100,RESISTELECTRICITY)
THEN
    RESPONSE #100
        ApplySpellRES("EKELEC", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,100,RESISTACID)
THEN
    RESPONSE #100
        ApplySpellRES("EKACID", Player6)
        Continue()
END

IF
    CheckStatGT(Player1,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player1)
        Continue()
END

IF
    CheckStatGT(Player2,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player2)
        Continue()
END

IF
    CheckStatGT(Player3,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player3)
        Continue()
END

IF
    CheckStatGT(Player4,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player4)
        Continue()
END

IF
    CheckStatGT(Player5,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player5)
        Continue()
END

IF
    CheckStatGT(Player6,100,MAGICDAMAGERESISTANCE)
THEN
    RESPONSE #100
        ApplySpellRES("EKMDAM", Player6)
        Continue()
END
>>>>>>>>

COPY ~fullplate/ekresspy.cre~ ~override~
COPY ~fullplate/ekslash.spl~ ~override~
COPY ~fullplate/ekcrush.spl~ ~override~
COPY ~fullplate/ekpierc.spl~ ~override~
COPY ~fullplate/ekmiss.spl~ ~override~
COPY ~fullplate/ekfire.spl~ ~override~
COPY ~fullplate/ekcold.spl~ ~override~
COPY ~fullplate/ekacid.spl~ ~override~
COPY ~fullplate/ekelec.spl~ ~override~
COPY ~fullplate/ekmdam.spl~ ~override~

// ApplySpellRES() isn't defined in a stock IWD install
APPEND ~action.ids~ ~160 ApplySpellRES(S:RES*,O:Target)~
 UNLESS ~ApplySpellRES(S:RES\*,O:Target)~

// IWD Tweaks code for assigning area scripts
COPY_EXISTING ~ar1101.are~ ~override~
              ~ar1102.are~ ~override~
              ~ar1104.are~ ~override~
              ~ar1106.are~ ~override~
              ~ar1109.are~ ~override~
              ~ar1200.are~ ~override~
              ~ar1201.are~ ~override~
              ~ar2001.are~ ~override~
              ~ar2002.are~ ~override~
              ~ar2003.are~ ~override~
              ~ar2005.are~ ~override~
              ~ar2006.are~ ~override~
              ~ar3001.are~ ~override~
              ~ar3101.are~ ~override~
              ~ar3201.are~ ~override~
              ~ar3301.are~ ~override~
              ~ar3401.are~ ~override~
              ~ar3501.are~ ~override~
              ~ar3502.are~ ~override~
              ~ar3503.are~ ~override~
              ~ar3600.are~ ~override~
              ~ar3601.are~ ~override~
              ~ar3602.are~ ~override~
              ~ar3603.are~ ~override~
              ~ar4002.are~ ~override~
              ~ar4004.are~ ~override~
              ~ar5001.are~ ~override~
              ~ar5002.are~ ~override~
              ~ar5003.are~ ~override~
              ~ar5102.are~ ~override~
              ~ar5201.are~ ~override~
              ~ar5202.are~ ~override~
              ~ar5203.are~ ~override~
              ~ar5204.are~ ~override~
              ~ar5301.are~ ~override~
              ~ar5302.are~ ~override~
              ~ar5303.are~ ~override~
              ~ar5401.are~ ~override~
              ~ar5402.are~ ~override~
              ~ar5403.are~ ~override~
              ~ar5404.are~ ~override~
              ~ar5502.are~ ~override~
              ~ar6001.are~ ~override~
              ~ar6007.are~ ~override~
              ~ar6009.are~ ~override~
              ~ar6011.are~ ~override~
              ~ar6014.are~ ~override~
              ~ar7000.are~ ~override~
              ~ar7002.are~ ~override~
              ~ar8002.are~ ~override~
              ~ar8014.are~ ~override~
              ~ar8015.are~ ~override~
              ~ar8016.are~ ~override~
  WRITE_ASCIIE 0x94 ~%SOURCE_RES%~ #8
BUT_ONLY_IF_IT_CHANGES

// IWD Tweaks code for assigning area scripts, HoW
ACTION_IF FILE_EXISTS_IN_GAME ~ar9100.are~ THEN BEGIN
  COPY_EXISTING ~ar9103.are~ ~override~
                  ~ar9301.are~ ~override~
                  ~ar9501.are~ ~override~
                  ~ar9601.are~ ~override~
    WRITE_ASCIIE 0x94 ~%SOURCE_RES%~ #8
  BUT_ONLY_IF_IT_CHANGES
END

// IWD Tweaks code for assigning area scripts, TotL
ACTION_IF FILE_EXISTS_IN_GAME ~ar9700.are~ THEN BEGIN
  COPY_EXISTING ~ar9800.are~ ~override~
                ~ar9801.are~ ~override~
    WRITE_ASCIIE 0x94 ~%SOURCE_RES%~ #8
  BUT_ONLY_IF_IT_CHANGES
END

// Ugly, ugly, ugly. If any mod adds areas we're fucked.
// todo: do this via a *.are regexp instead
EXTEND_BOTTOM ~AR1000.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1001.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1002.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1003.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1004.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1005.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1006.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1007.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1008.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1009.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1010.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1011.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1012.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1013.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1014.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1015.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1016.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1100.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1101.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1102.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1103.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1104.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1105.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1106.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1109.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1200.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR1201.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2000.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2001.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2002.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2003.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2004.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2005.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2006.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2100.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2101.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2102.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2103.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2104.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2105.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2106.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2107.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2108.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2110.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2111.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2112.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2113.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2114.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2115.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR2116.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3000.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3001.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3101.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3201.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3301.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3401.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3501.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3502.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3503.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3600.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3601.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3602.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR3603.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR4000.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR4001.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR4002.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR4003.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR4004.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR4005.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5000.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5001.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5002.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5003.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5004.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5101.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5102.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5103.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5104.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5201.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5202.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5203.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5204.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5301.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5302.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5303.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5304.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5401.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5402.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5403.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5404.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR5502.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6000.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6001.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6002.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6003.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6004.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6005.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6006.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6007.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6008.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6009.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6010.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6011.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6013.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR6014.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR7000.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR7001.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR7002.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR7003.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR7004.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR7005.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8001.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8002.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8003.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8004.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8005.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8006.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8007.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8008.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8009.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8010.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8011.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8012.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8013.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8014.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8015.bcs~ ~iwresres.baf~
EXTEND_BOTTOM ~AR8016.bcs~ ~iwresres.baf~

ACTION_IF FILE_EXISTS_IN_GAME ~ar9100.are~ THEN BEGIN
  EXTEND_BOTTOM ~AR9100.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9101.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9102.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9103.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9104.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9105.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9106.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9107.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9108.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9109.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9110.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9200.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9201.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9300.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9301.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9400.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9500.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9501.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9502.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9600.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9601.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9602.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9603.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9604.bcs~ ~iwresres.baf~
END

ACTION_IF FILE_EXISTS_IN_GAME ~ar9700.are~ THEN BEGIN
  EXTEND_BOTTOM ~AR9700.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9701.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9702.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9703.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9704.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9705.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9706.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9707.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9708.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9709.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9710.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9711.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9712.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9713.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9714.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9715.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9716.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9717.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9718.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9800.bcs~ ~iwresres.baf~
  EXTEND_BOTTOM ~AR9801.bcs~ ~iwresres.baf~
END

END // ACTION_IF Icewind Dale engine


//////////////////////////
// The minor components //
//////////////////////////

BEGIN ~Full Plate And Packing Steel: Field Improvisation (convenience tweak, remove restrictions on combining protective items)~
 DESIGNATED 102

COPY ~fullplate/itemexcl.2da~ ~override~


BEGIN ~Full Plate And Packing Steel: Little He Knows Where a Foe May Lurk (everyone can backstab at x2, thieves/assassins do better)~
 DESIGNATED 204

COPY_EXISTING ~backstab.2da~ ~override/backstab.2da~
  COUNT_2DA_COLS cols
  SET_2DA_ENTRY 1 1 10 ~2~
  FOR (x=2; (x < %cols%); x+=1) BEGIN
    READ_2DA_ENTRY 1 %x% 10 entry
    SET entry = entry + 1
    SET_2DA_ENTRY 1 %x% 10 ~%entry%~
  END
  BUT_ONLY_IF_IT_CHANGES

// allows us to regexp match tabs and newlines
INCLUDE ~fullplate/extra_regexp_vars.tph~

<<<<<<<< dummy.blarg
           
>>>>>>>>

ACTION_IF ( ENGINE_IS ~ToB~ || ENGINE_IS ~SoA~ ) BEGIN
  COPY_EXISTING ~kitlist.2da~ ~override~
    COUNT_2DA_ROWS 4 ~entrycount~
    FOR (i=0;i<~%entrycount%~;i=i+1) BEGIN
        READ_2DA_ENTRY ~%i%~ 1 4 ~name~
        READ_2DA_ENTRY ~%i%~ 4 4 ~helpref~
        PATCH_IF ( ~%name%~ STRING_EQUAL ~ASSASIN~ && ENGINE_IS ~SoA~ ) BEGIN
          GET_STRREF %helpref% helptext

          INNER_PATCH_SAVE newhelptext "%helptext%" BEGIN
            REPLACE_EVALUATE ~Bonus \+1 to hit and \+1 damage~
            BEGIN
              SPRINT result  ~Bonus +1 to hit and +1 damage%wnl%%wnl%-  Improves further to x7 backstabbing at level 18 and x8 at level 21.~
            END
            ~%result%~
          END
          INNER_ACTION BEGIN
            COPY ~dummy.blarg~ ~override~
              SAY 0 ~%newhelptext%~

            COPY_EXISTING ~dummy.blarg~ ~override~
              READ_LONG 0 newhelpref
          END

          SET_2DA_ENTRY ~%i%~ 4 4 ~%newhelpref%~
        END

        PATCH_IF ( ~%name%~ STRING_EQUAL ~ASSASIN~ && ENGINE_IS ~ToB~ ) BEGIN
          GET_STRREF %helpref% helptext

          INNER_PATCH_SAVE newhelptext "%helptext%" BEGIN
            REPLACE_EVALUATE ~Backstab reaches x7 instead of x5~
            BEGIN
              SPRINT result  ~Backstab reaches x8 instead of x6~
            END
            ~%result%~
          END
          INNER_ACTION BEGIN
            COPY ~dummy.blarg~ ~override~
              SAY 0 ~%newhelptext%~

            COPY_EXISTING ~dummy.blarg~ ~override~
              READ_LONG 0 newhelpref
          END

          SET_2DA_ENTRY ~%i%~ 4 4 ~%newhelpref%~
        END

        PATCH_IF ( ~%name%~ STRING_EQUAL ~STALKER~ ) BEGIN
          GET_STRREF %helpref% helptext

          INNER_PATCH_SAVE newhelptext "%helptext%" BEGIN
            REPLACE_EVALUATE ~May backstab for a lesser amount than the thief class (level 1-8: x1, level 9-16: x2, level 17\+: x3)~
            BEGIN
              SPRINT result  ~May backstab for a lesser amount than the thief class (level 1-8: x2, level 9-16: x3, level 17+: x4)~
            END
            ~%result%~
          END
          INNER_ACTION BEGIN
            COPY ~dummy.blarg~ ~override~
              SAY 0 ~%newhelptext%~

            COPY_EXISTING ~dummy.blarg~ ~override~
              READ_LONG 0 newhelpref
          END

          SET_2DA_ENTRY ~%i%~ 4 4 ~%newhelpref%~
        END

        PATCH_IF ( ~%name%~ STRING_EQUAL ~SWASHBUCKLER~ ) BEGIN
          GET_STRREF %helpref% helptext

          INNER_PATCH_SAVE newhelptext "%helptext%" BEGIN
            REPLACE_EVALUATE ~No backstab multiplier~
            BEGIN
              SPRINT result  ~Backstab multiplier x2, does not increase.~
            END
            ~%result%~
          END
          INNER_ACTION BEGIN
            COPY ~dummy.blarg~ ~override~
              SAY 0 ~%newhelptext%~

            COPY_EXISTING ~dummy.blarg~ ~override~
              READ_LONG 0 newhelpref
          END

          SET_2DA_ENTRY ~%i%~ 4 4 ~%newhelpref%~
        END
    END
    BUT_ONLY_IF_IT_CHANGES

END

